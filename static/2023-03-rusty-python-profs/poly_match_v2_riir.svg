<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="682" onload="init(evt)" viewBox="0 0 1200 682" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="682" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00"></text><text id="details" fill="rgb(0,0,0)" x="10" y="40.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="671.00"> </text><svg id="frames" x="10" width="1180" total_samples="241"><g><title>0x7fc85e727a20 (?) (1 samples, 0.41%)</title><rect x="0.0000%" y="100" width="0.4149%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="110.50"></text></g><g><title>0x7fc85e723bc3 (?) (1 samples, 0.41%)</title><rect x="0.0000%" y="116" width="0.4149%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="126.50"></text></g><g><title>0x7fc85e727dde (?) (1 samples, 0.41%)</title><rect x="0.0000%" y="132" width="0.4149%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="142.50"></text></g><g><title>poly_match_rs::lib_v1::find_close_polygons::h2c922349e6052029 (alloc.rs) (8 samples, 3.32%)</title><rect x="0.4149%" y="196" width="3.3195%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="8"/><text x="0.6649%" y="206.50">pol..</text></g><g><title>poly_match_rs::lib_v1::find_close_polygons::h2c922349e6052029 (lib_v1.rs:15) (1 samples, 0.41%)</title><rect x="3.7344%" y="196" width="0.4149%" height="15" fill="rgb(208,68,35)" fg:x="9" fg:w="1"/><text x="3.9844%" y="206.50"></text></g><g><title>_$LT$alloc..vec..into_iter..IntoIter$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$::next::hcb4d99f7afad2944 (into_iter.rs:188) (1 samples, 0.41%)</title><rect x="3.7344%" y="212" width="0.4149%" height="15" fill="rgb(232,128,0)" fg:x="9" fg:w="1"/><text x="3.9844%" y="222.50"></text></g><g><title>_$LT$numpy..borrow..PyReadonlyArray$LT$T$C$D$GT$$u20$as$u20$pyo3..conversion..FromPyObject$GT$::extract::h4a99d77495e7c0ba (mod.rs:230) (2 samples, 0.83%)</title><rect x="4.5643%" y="228" width="0.8299%" height="15" fill="rgb(207,160,47)" fg:x="11" fg:w="2"/><text x="4.8143%" y="238.50"></text></g><g><title>numpy::array::PyArray$LT$T$C$D$GT$::extract::he973047aa59dd542 (array.rs:387) (1 samples, 0.41%)</title><rect x="5.3942%" y="276" width="0.4149%" height="15" fill="rgb(228,23,34)" fg:x="13" fg:w="1"/><text x="5.6442%" y="286.50"></text></g><g><title>numpy::array::PyArray$LT$T$C$D$GT$::ndim::hb912f667d9ecfb84 (array.rs:288) (1 samples, 0.41%)</title><rect x="5.3942%" y="292" width="0.4149%" height="15" fill="rgb(218,30,26)" fg:x="13" fg:w="1"/><text x="5.6442%" y="302.50"></text></g><g><title>numpy::array::PyArray$LT$T$C$D$GT$::extract::he973047aa59dd542 (array.rs:395) (1 samples, 0.41%)</title><rect x="5.8091%" y="276" width="0.4149%" height="15" fill="rgb(220,122,19)" fg:x="14" fg:w="1"/><text x="6.0591%" y="286.50"></text></g><g><title>numpy::array::PyArray$LT$T$C$D$GT$::dtype::h91d65c8161519754 (array.rs:181) (1 samples, 0.41%)</title><rect x="5.8091%" y="292" width="0.4149%" height="15" fill="rgb(250,228,42)" fg:x="14" fg:w="1"/><text x="6.0591%" y="302.50"></text></g><g><title>pyo3::marker::Python::from_borrowed_ptr::h3cbcf548188c2e57 (marker.rs:758) (1 samples, 0.41%)</title><rect x="5.8091%" y="308" width="0.4149%" height="15" fill="rgb(240,193,28)" fg:x="14" fg:w="1"/><text x="6.0591%" y="318.50"></text></g><g><title>pyo3::conversion::FromPyPointer::from_borrowed_ptr::hc5d2430c5906266e (conversion.rs:596) (1 samples, 0.41%)</title><rect x="5.8091%" y="324" width="0.4149%" height="15" fill="rgb(216,20,37)" fg:x="14" fg:w="1"/><text x="6.0591%" y="334.50"></text></g><g><title>pyo3::conversion::FromPyPointer::from_borrowed_ptr_or_panic::h6459cd7d3f953941 (conversion.rs:588) (1 samples, 0.41%)</title><rect x="5.8091%" y="340" width="0.4149%" height="15" fill="rgb(206,188,39)" fg:x="14" fg:w="1"/><text x="6.0591%" y="350.50"></text></g><g><title>core::option::Option$LT$T$GT$::unwrap_or_else::h84f364b61f07f295 (option.rs:990) (1 samples, 0.41%)</title><rect x="5.8091%" y="356" width="0.4149%" height="15" fill="rgb(217,207,13)" fg:x="14" fg:w="1"/><text x="6.0591%" y="366.50"></text></g><g><title>core::ptr::non_null::NonNull$LT$T$GT$::new::h334b2397e7d24fd4 (non_null.rs:223) (4 samples, 1.66%)</title><rect x="6.2241%" y="404" width="1.6598%" height="15" fill="rgb(231,73,38)" fg:x="15" fg:w="4"/><text x="6.4741%" y="414.50"></text></g><g><title>core::ptr::mut_ptr::_$LT$impl$u20$$BP$mut$u20$T$GT$::is_null::h5d90c5f1a3b6ca45 (mut_ptr.rs:50) (4 samples, 1.66%)</title><rect x="6.2241%" y="420" width="1.6598%" height="15" fill="rgb(225,20,46)" fg:x="15" fg:w="4"/><text x="6.4741%" y="430.50"></text></g><g><title>core::ptr::mut_ptr::_$LT$impl$u20$$BP$mut$u20$T$GT$::is_null::runtime_impl::hf4e194c065b800f2 (mut_ptr.rs:36) (4 samples, 1.66%)</title><rect x="6.2241%" y="436" width="1.6598%" height="15" fill="rgb(210,31,41)" fg:x="15" fg:w="4"/><text x="6.4741%" y="446.50"></text></g><g><title>PyArray_DescrFromType (numpy/core/_multiarray_umath.cpython-310-x86_64-linux-gnu.so) (4 samples, 1.66%)</title><rect x="6.2241%" y="452" width="1.6598%" height="15" fill="rgb(221,200,47)" fg:x="15" fg:w="4"/><text x="6.4741%" y="462.50"></text></g><g><title>_$LT$f64$u20$as$u20$numpy..dtype..Element$GT$::get_dtype::h513f05b60aa1f87c (dtype.rs:457) (6 samples, 2.49%)</title><rect x="6.2241%" y="308" width="2.4896%" height="15" fill="rgb(226,26,5)" fg:x="15" fg:w="6"/><text x="6.4741%" y="318.50">_$..</text></g><g><title>numpy::dtype::PyArrayDescr::from_npy_type::h85da40e831983df4 (dtype.rs:132) (6 samples, 2.49%)</title><rect x="6.2241%" y="324" width="2.4896%" height="15" fill="rgb(249,33,26)" fg:x="15" fg:w="6"/><text x="6.4741%" y="334.50">nu..</text></g><g><title>pyo3::marker::Python::from_owned_ptr::h14d775f8947d0e73 (marker.rs:711) (6 samples, 2.49%)</title><rect x="6.2241%" y="340" width="2.4896%" height="15" fill="rgb(235,183,28)" fg:x="15" fg:w="6"/><text x="6.4741%" y="350.50">py..</text></g><g><title>pyo3::conversion::FromPyPointer::from_owned_ptr::h294e05a27e5267bb (conversion.rs:565) (6 samples, 2.49%)</title><rect x="6.2241%" y="356" width="2.4896%" height="15" fill="rgb(221,5,38)" fg:x="15" fg:w="6"/><text x="6.4741%" y="366.50">py..</text></g><g><title>pyo3::conversion::FromPyPointer::from_owned_ptr_or_panic::h6c5155447d4df734 (conversion.rs:557) (6 samples, 2.49%)</title><rect x="6.2241%" y="372" width="2.4896%" height="15" fill="rgb(247,18,42)" fg:x="15" fg:w="6"/><text x="6.4741%" y="382.50">py..</text></g><g><title>_$LT$T$u20$as$u20$pyo3..conversion..FromPyPointer$GT$::from_owned_ptr_or_opt::h3e6a0a705073cd3d (conversion.rs:616) (6 samples, 2.49%)</title><rect x="6.2241%" y="388" width="2.4896%" height="15" fill="rgb(241,131,45)" fg:x="15" fg:w="6"/><text x="6.4741%" y="398.50">_$..</text></g><g><title>pyo3::gil::register_owned::h83990b8a750cd1a5 (gil.rs:433) (2 samples, 0.83%)</title><rect x="7.8838%" y="404" width="0.8299%" height="15" fill="rgb(249,31,29)" fg:x="19" fg:w="2"/><text x="8.1338%" y="414.50"></text></g><g><title>std::thread::local::LocalKey$LT$T$GT$::try_with::h495ad07b773bce1c (local.rs:445) (2 samples, 0.83%)</title><rect x="7.8838%" y="420" width="0.8299%" height="15" fill="rgb(225,111,53)" fg:x="19" fg:w="2"/><text x="8.1338%" y="430.50"></text></g><g><title>pyo3::gil::OWNED_OBJECTS::__getit::hff8f19d5becbfdf3 (local.rs:346) (2 samples, 0.83%)</title><rect x="7.8838%" y="436" width="0.8299%" height="15" fill="rgb(238,160,17)" fg:x="19" fg:w="2"/><text x="8.1338%" y="446.50"></text></g><g><title>std::thread::local::fast::Key$LT$T$GT$::get::h9558217c034c3f5e (local.rs:968) (2 samples, 0.83%)</title><rect x="7.8838%" y="452" width="0.8299%" height="15" fill="rgb(214,148,48)" fg:x="19" fg:w="2"/><text x="8.1338%" y="462.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner$LT$T$GT$::get::h12fc9fb59d7288ee (local.rs:802) (2 samples, 0.83%)</title><rect x="7.8838%" y="468" width="0.8299%" height="15" fill="rgb(232,36,49)" fg:x="19" fg:w="2"/><text x="8.1338%" y="478.50"></text></g><g><title>core::option::Option$LT$T$GT$::as_ref::h9bc9cbbf00c3c8cd (option.rs:676) (2 samples, 0.83%)</title><rect x="7.8838%" y="484" width="0.8299%" height="15" fill="rgb(209,103,24)" fg:x="19" fg:w="2"/><text x="8.1338%" y="494.50"></text></g><g><title>_$LT$numpy..borrow..PyReadonlyArray$LT$T$C$D$GT$$u20$as$u20$pyo3..conversion..FromPyObject$GT$::extract::h4a99d77495e7c0ba (mod.rs:231) (9 samples, 3.73%)</title><rect x="5.3942%" y="228" width="3.7344%" height="15" fill="rgb(229,88,8)" fg:x="13" fg:w="9"/><text x="5.6442%" y="238.50">_$LT..</text></g><g><title>pyo3::types::any::PyAny::extract::h299d3762a5a60fc9 (any.rs:845) (9 samples, 3.73%)</title><rect x="5.3942%" y="244" width="3.7344%" height="15" fill="rgb(213,181,19)" fg:x="13" fg:w="9"/><text x="5.6442%" y="254.50">pyo3..</text></g><g><title>_$LT$$RF$numpy..array..PyArray$LT$T$C$D$GT$$u20$as$u20$pyo3..conversion..FromPyObject$GT$::extract::h71990fea81d690d7 (array.rs:148) (9 samples, 3.73%)</title><rect x="5.3942%" y="260" width="3.7344%" height="15" fill="rgb(254,191,54)" fg:x="13" fg:w="9"/><text x="5.6442%" y="270.50">_$LT..</text></g><g><title>numpy::array::PyArray$LT$T$C$D$GT$::extract::he973047aa59dd542 (array.rs:397) (7 samples, 2.90%)</title><rect x="6.2241%" y="276" width="2.9046%" height="15" fill="rgb(241,83,37)" fg:x="15" fg:w="7"/><text x="6.4741%" y="286.50">nu..</text></g><g><title>numpy::dtype::PyArrayDescr::is_equiv_to::hc29b92615e9fb145 (dtype.rs:124) (7 samples, 2.90%)</title><rect x="6.2241%" y="292" width="2.9046%" height="15" fill="rgb(233,36,39)" fg:x="15" fg:w="7"/><text x="6.4741%" y="302.50">nu..</text></g><g><title>_$LT$f64$u20$as$u20$numpy..dtype..Element$GT$::get_dtype::h513f05b60aa1f87c (dtype.rs:458) (1 samples, 0.41%)</title><rect x="8.7137%" y="308" width="0.4149%" height="15" fill="rgb(226,3,54)" fg:x="21" fg:w="1"/><text x="8.9637%" y="318.50"></text></g><g><title>numpy::borrow::shared::acquire_shared::h3885b674b6778180 (shared.rs:45) (1 samples, 0.41%)</title><rect x="9.1286%" y="308" width="0.4149%" height="15" fill="rgb(245,192,40)" fg:x="22" fg:w="1"/><text x="9.3786%" y="318.50"></text></g><g><title>hashbrown::raw::RawTableInner$LT$A$GT$::find_inner::h832a41c5f797b723 (mod.rs:1170) (1 samples, 0.41%)</title><rect x="12.0332%" y="388" width="0.4149%" height="15" fill="rgb(238,167,29)" fg:x="29" fg:w="1"/><text x="12.2832%" y="398.50"></text></g><g><title>hashbrown::raw::h2::hf01b74370be6934a (mod.rs:145) (1 samples, 0.41%)</title><rect x="12.0332%" y="404" width="0.4149%" height="15" fill="rgb(232,182,51)" fg:x="29" fg:w="1"/><text x="12.2832%" y="414.50"></text></g><g><title>numpy::borrow::shared::BorrowFlags::acquire::h677a3605c48f10f6 (shared.rs:260) (2 samples, 0.83%)</title><rect x="12.0332%" y="324" width="0.8299%" height="15" fill="rgb(231,60,39)" fg:x="29" fg:w="2"/><text x="12.2832%" y="334.50"></text></g><g><title>std::collections::hash::map::HashMap$LT$K$C$V$C$S$GT$::entry::h65ca66b7b439de74 (map.rs:855) (2 samples, 0.83%)</title><rect x="12.0332%" y="340" width="0.8299%" height="15" fill="rgb(208,69,12)" fg:x="29" fg:w="2"/><text x="12.2832%" y="350.50"></text></g><g><title>hashbrown::rustc_entry::_$LT$impl$u20$hashbrown..map..HashMap$LT$K$C$V$C$S$C$A$GT$$GT$::rustc_entry::he81093197c277b41 (rustc_entry.rs:36) (2 samples, 0.83%)</title><rect x="12.0332%" y="356" width="0.8299%" height="15" fill="rgb(235,93,37)" fg:x="29" fg:w="2"/><text x="12.2832%" y="366.50"></text></g><g><title>hashbrown::raw::RawTable$LT$T$C$A$GT$::find::hee988a7516e08e7f (mod.rs:816) (2 samples, 0.83%)</title><rect x="12.0332%" y="372" width="0.8299%" height="15" fill="rgb(213,116,39)" fg:x="29" fg:w="2"/><text x="12.2832%" y="382.50"></text></g><g><title>hashbrown::raw::RawTableInner$LT$A$GT$::find_inner::h832a41c5f797b723 (mod.rs:1184) (1 samples, 0.41%)</title><rect x="12.4481%" y="388" width="0.4149%" height="15" fill="rgb(222,207,29)" fg:x="30" fg:w="1"/><text x="12.6981%" y="398.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty::hb8fe560bd3dd1818 (sse2.rs:95) (1 samples, 0.41%)</title><rect x="12.4481%" y="404" width="0.4149%" height="15" fill="rgb(206,96,30)" fg:x="30" fg:w="1"/><text x="12.6981%" y="414.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte::hfd100457f3633dfc (sse2.rs:87) (1 samples, 0.41%)</title><rect x="12.4481%" y="420" width="0.4149%" height="15" fill="rgb(218,138,4)" fg:x="30" fg:w="1"/><text x="12.6981%" y="430.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8::h1387440fd0071646 (sse2.rs:1391) (1 samples, 0.41%)</title><rect x="12.4481%" y="436" width="0.4149%" height="15" fill="rgb(250,191,14)" fg:x="30" fg:w="1"/><text x="12.6981%" y="446.50"></text></g><g><title>__libc_malloc (libc-2.31.so) (1 samples, 0.41%)</title><rect x="12.8631%" y="452" width="0.4149%" height="15" fill="rgb(239,60,40)" fg:x="31" fg:w="1"/><text x="13.1131%" y="462.50"></text></g><g><title>numpy::borrow::shared::BorrowFlags::acquire::h677a3605c48f10f6 (shared.rs:290) (3 samples, 1.24%)</title><rect x="12.8631%" y="324" width="1.2448%" height="15" fill="rgb(206,27,48)" fg:x="31" fg:w="3"/><text x="13.1131%" y="334.50"></text></g><g><title>std::collections::hash::map::HashMap$LT$K$C$V$C$S$GT$::with_capacity_and_hasher::h4e4931c9ffd7e276 (map.rs:316) (3 samples, 1.24%)</title><rect x="12.8631%" y="340" width="1.2448%" height="15" fill="rgb(225,35,8)" fg:x="31" fg:w="3"/><text x="13.1131%" y="350.50"></text></g><g><title>hashbrown::map::HashMap$LT$K$C$V$C$S$GT$::with_capacity_and_hasher::hb4c45bb6e1d36a24 (map.rs:422) (3 samples, 1.24%)</title><rect x="12.8631%" y="356" width="1.2448%" height="15" fill="rgb(250,213,24)" fg:x="31" fg:w="3"/><text x="13.1131%" y="366.50"></text></g><g><title>hashbrown::raw::RawTable$LT$T$GT$::with_capacity::h2c0361bbf1a7bed6 (mod.rs:411) (3 samples, 1.24%)</title><rect x="12.8631%" y="372" width="1.2448%" height="15" fill="rgb(247,123,22)" fg:x="31" fg:w="3"/><text x="13.1131%" y="382.50"></text></g><g><title>hashbrown::raw::RawTable$LT$T$C$A$GT$::with_capacity_in::h3b6c0fab979218cf (mod.rs:481) (3 samples, 1.24%)</title><rect x="12.8631%" y="388" width="1.2448%" height="15" fill="rgb(231,138,38)" fg:x="31" fg:w="3"/><text x="13.1131%" y="398.50"></text></g><g><title>hashbrown::raw::RawTable$LT$T$C$A$GT$::fallible_with_capacity::h2ca9cdfc9daf4a96 (mod.rs:460) (3 samples, 1.24%)</title><rect x="12.8631%" y="404" width="1.2448%" height="15" fill="rgb(231,145,46)" fg:x="31" fg:w="3"/><text x="13.1131%" y="414.50"></text></g><g><title>hashbrown::raw::RawTableInner$LT$A$GT$::fallible_with_capacity::hd8f54b9d668fb8ee (mod.rs:1109) (3 samples, 1.24%)</title><rect x="12.8631%" y="420" width="1.2448%" height="15" fill="rgb(251,118,11)" fg:x="31" fg:w="3"/><text x="13.1131%" y="430.50"></text></g><g><title>hashbrown::raw::RawTableInner$LT$A$GT$::new_uninitialized::hef50fa8395b45193 (mod.rs:1080) (3 samples, 1.24%)</title><rect x="12.8631%" y="436" width="1.2448%" height="15" fill="rgb(217,147,25)" fg:x="31" fg:w="3"/><text x="13.1131%" y="446.50"></text></g><g><title>malloc (libc-2.31.so) (2 samples, 0.83%)</title><rect x="13.2780%" y="452" width="0.8299%" height="15" fill="rgb(247,81,37)" fg:x="32" fg:w="2"/><text x="13.5280%" y="462.50"></text></g><g><title>hashbrown::map::HashMap$LT$K$C$V$C$S$C$A$GT$::insert::h40d94036d1d85dbd (map.rs:1674) (1 samples, 0.41%)</title><rect x="14.5228%" y="388" width="0.4149%" height="15" fill="rgb(209,12,38)" fg:x="35" fg:w="1"/><text x="14.7728%" y="398.50"></text></g><g><title>_$LT$numpy..borrow..shared..BorrowKey$u20$as$u20$core..hash..Hash$GT$::hash::h1890035d42c07a5a (shared.rs:215) (1 samples, 0.41%)</title><rect x="14.9378%" y="452" width="0.4149%" height="15" fill="rgb(227,1,9)" fg:x="36" fg:w="1"/><text x="15.1878%" y="462.50"></text></g><g><title>core::hash::impls::_$LT$impl$u20$core..hash..Hash$u20$for$u20$$LP$T$C$B$RP$$GT$::hash::h4ac3a748e9181eab (mod.rs:920) (1 samples, 0.41%)</title><rect x="14.9378%" y="468" width="0.4149%" height="15" fill="rgb(248,47,43)" fg:x="36" fg:w="1"/><text x="15.1878%" y="478.50"></text></g><g><title>core::hash::impls::_$LT$impl$u20$core..hash..Hash$u20$for$u20$$BP$mut$u20$T$GT$::hash::h963931b825e2b644 (mod.rs:1003) (1 samples, 0.41%)</title><rect x="14.9378%" y="484" width="0.4149%" height="15" fill="rgb(221,10,30)" fg:x="36" fg:w="1"/><text x="15.1878%" y="494.50"></text></g><g><title>_$LT$rustc_hash..FxHasher$u20$as$u20$core..hash..Hasher$GT$::write_usize::hef653c5065dd641f (lib.rs:141) (1 samples, 0.41%)</title><rect x="14.9378%" y="500" width="0.4149%" height="15" fill="rgb(210,229,1)" fg:x="36" fg:w="1"/><text x="15.1878%" y="510.50"></text></g><g><title>rustc_hash::FxHasher::add_to_hash::h9e4e288e2deb736f (lib.rs:79) (1 samples, 0.41%)</title><rect x="14.9378%" y="516" width="0.4149%" height="15" fill="rgb(222,148,37)" fg:x="36" fg:w="1"/><text x="15.1878%" y="526.50"></text></g><g><title>core::num::_$LT$impl$u20$usize$GT$::wrapping_mul::h5eed7b3bfdf14434 (uint_macros.rs:1253) (1 samples, 0.41%)</title><rect x="14.9378%" y="532" width="0.4149%" height="15" fill="rgb(234,67,33)" fg:x="36" fg:w="1"/><text x="15.1878%" y="542.50"></text></g><g><title>hashbrown::map::HashMap$LT$K$C$V$C$S$C$A$GT$::insert::h40d94036d1d85dbd (map.rs:1675) (3 samples, 1.24%)</title><rect x="14.9378%" y="388" width="1.2448%" height="15" fill="rgb(247,98,35)" fg:x="36" fg:w="3"/><text x="15.1878%" y="398.50"></text></g><g><title>hashbrown::map::make_insert_hash::h17034c62d604acf5 (map.rs:288) (3 samples, 1.24%)</title><rect x="14.9378%" y="404" width="1.2448%" height="15" fill="rgb(247,138,52)" fg:x="36" fg:w="3"/><text x="15.1878%" y="414.50"></text></g><g><title>core::hash::BuildHasher::hash_one::h4fbcb17a0cee6c70 (mod.rs:724) (3 samples, 1.24%)</title><rect x="14.9378%" y="420" width="1.2448%" height="15" fill="rgb(213,79,30)" fg:x="36" fg:w="3"/><text x="15.1878%" y="430.50"></text></g><g><title>core::hash::impls::_$LT$impl$u20$core..hash..Hash$u20$for$u20$$RF$T$GT$::hash::h35366a5335d4263f (mod.rs:975) (3 samples, 1.24%)</title><rect x="14.9378%" y="436" width="1.2448%" height="15" fill="rgb(246,177,23)" fg:x="36" fg:w="3"/><text x="15.1878%" y="446.50"></text></g><g><title>_$LT$numpy..borrow..shared..BorrowKey$u20$as$u20$core..hash..Hash$GT$::hash::h1890035d42c07a5a (shared.rs:217) (2 samples, 0.83%)</title><rect x="15.3527%" y="452" width="0.8299%" height="15" fill="rgb(230,62,27)" fg:x="37" fg:w="2"/><text x="15.6027%" y="462.50"></text></g><g><title>hashbrown::raw::RawTableInner$LT$A$GT$::find_inner::h832a41c5f797b723 (mod.rs) (1 samples, 0.41%)</title><rect x="16.1826%" y="436" width="0.4149%" height="15" fill="rgb(216,154,8)" fg:x="39" fg:w="1"/><text x="16.4326%" y="446.50"></text></g><g><title>hashbrown::raw::RawTableInner$LT$A$GT$::find_inner::h832a41c5f797b723 (mod.rs:1170) (4 samples, 1.66%)</title><rect x="16.5975%" y="436" width="1.6598%" height="15" fill="rgb(244,35,45)" fg:x="40" fg:w="4"/><text x="16.8475%" y="446.50"></text></g><g><title>hashbrown::raw::h2::hf01b74370be6934a (mod.rs:145) (4 samples, 1.66%)</title><rect x="16.5975%" y="452" width="1.6598%" height="15" fill="rgb(251,115,12)" fg:x="40" fg:w="4"/><text x="16.8475%" y="462.50"></text></g><g><title>hashbrown::map::HashMap$LT$K$C$V$C$S$C$A$GT$::insert::h40d94036d1d85dbd (map.rs:1676) (6 samples, 2.49%)</title><rect x="16.1826%" y="388" width="2.4896%" height="15" fill="rgb(240,54,50)" fg:x="39" fg:w="6"/><text x="16.4326%" y="398.50">ha..</text></g><g><title>hashbrown::raw::RawTable$LT$T$C$A$GT$::get_mut::h84161e0bd792a13a (mod.rs:841) (6 samples, 2.49%)</title><rect x="16.1826%" y="404" width="2.4896%" height="15" fill="rgb(233,84,52)" fg:x="39" fg:w="6"/><text x="16.4326%" y="414.50">ha..</text></g><g><title>hashbrown::raw::RawTable$LT$T$C$A$GT$::find::h011e086c0d04bb71 (mod.rs:816) (6 samples, 2.49%)</title><rect x="16.1826%" y="420" width="2.4896%" height="15" fill="rgb(207,117,47)" fg:x="39" fg:w="6"/><text x="16.4326%" y="430.50">ha..</text></g><g><title>hashbrown::raw::RawTableInner$LT$A$GT$::find_inner::h832a41c5f797b723 (mod.rs:1176) (1 samples, 0.41%)</title><rect x="18.2573%" y="436" width="0.4149%" height="15" fill="rgb(249,43,39)" fg:x="44" fg:w="1"/><text x="18.5073%" y="446.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte::hfd100457f3633dfc (sse2.rs:87) (1 samples, 0.41%)</title><rect x="18.2573%" y="452" width="0.4149%" height="15" fill="rgb(209,38,44)" fg:x="44" fg:w="1"/><text x="18.5073%" y="462.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8::h1387440fd0071646 (sse2.rs:1391) (1 samples, 0.41%)</title><rect x="18.2573%" y="468" width="0.4149%" height="15" fill="rgb(236,212,23)" fg:x="44" fg:w="1"/><text x="18.5073%" y="478.50"></text></g><g><title>hashbrown::raw::RawTableInner$LT$A$GT$::find_insert_slot::h5b9c1a8a6bde0793 (mod.rs:1139) (1 samples, 0.41%)</title><rect x="18.6722%" y="420" width="0.4149%" height="15" fill="rgb(242,79,21)" fg:x="45" fg:w="1"/><text x="18.9222%" y="430.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted::h249bd7cee9249777 (sse2.rs:111) (1 samples, 0.41%)</title><rect x="18.6722%" y="436" width="0.4149%" height="15" fill="rgb(211,96,35)" fg:x="45" fg:w="1"/><text x="18.9222%" y="446.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8::h1387440fd0071646 (sse2.rs:1391) (1 samples, 0.41%)</title><rect x="18.6722%" y="452" width="0.4149%" height="15" fill="rgb(253,215,40)" fg:x="45" fg:w="1"/><text x="18.9222%" y="462.50"></text></g><g><title>hashbrown::raw::RawTable$LT$T$C$A$GT$::insert::ha0ff13a4d4c75eef (mod.rs:718) (2 samples, 0.83%)</title><rect x="18.6722%" y="404" width="0.8299%" height="15" fill="rgb(211,81,21)" fg:x="45" fg:w="2"/><text x="18.9222%" y="414.50"></text></g><g><title>hashbrown::raw::RawTableInner$LT$A$GT$::find_insert_slot::h5b9c1a8a6bde0793 (mod.rs:1151) (1 samples, 0.41%)</title><rect x="19.0871%" y="420" width="0.4149%" height="15" fill="rgb(208,190,38)" fg:x="46" fg:w="1"/><text x="19.3371%" y="430.50"></text></g><g><title>hashbrown::raw::is_full::he978e3e8c28328e5 (mod.rs:113) (1 samples, 0.41%)</title><rect x="19.0871%" y="436" width="0.4149%" height="15" fill="rgb(235,213,38)" fg:x="46" fg:w="1"/><text x="19.3371%" y="446.50"></text></g><g><title>hashbrown::raw::RawTable$LT$T$C$A$GT$::insert::ha0ff13a4d4c75eef (mod.rs:724) (1 samples, 0.41%)</title><rect x="19.5021%" y="404" width="0.4149%" height="15" fill="rgb(237,122,38)" fg:x="47" fg:w="1"/><text x="19.7521%" y="414.50"></text></g><g><title>hashbrown::raw::RawTable$LT$T$C$A$GT$::insert::ha0ff13a4d4c75eef (mod.rs:731) (1 samples, 0.41%)</title><rect x="19.9170%" y="404" width="0.4149%" height="15" fill="rgb(244,218,35)" fg:x="48" fg:w="1"/><text x="20.1670%" y="414.50"></text></g><g><title>hashbrown::raw::RawTable$LT$T$C$A$GT$::bucket::h94202e3861ec9b4d (mod.rs:523) (1 samples, 0.41%)</title><rect x="19.9170%" y="420" width="0.4149%" height="15" fill="rgb(240,68,47)" fg:x="48" fg:w="1"/><text x="20.1670%" y="430.50"></text></g><g><title>hashbrown::raw::Bucket$LT$T$GT$::from_base_index::h474942fb08b2fca9 (mod.rs:299) (1 samples, 0.41%)</title><rect x="19.9170%" y="436" width="0.4149%" height="15" fill="rgb(210,16,53)" fg:x="48" fg:w="1"/><text x="20.1670%" y="446.50"></text></g><g><title>core::ptr::mut_ptr::_$LT$impl$u20$$BP$mut$u20$T$GT$::sub::h0324ec6866a2ee13 (mut_ptr.rs:1103) (1 samples, 0.41%)</title><rect x="19.9170%" y="452" width="0.4149%" height="15" fill="rgb(235,124,12)" fg:x="48" fg:w="1"/><text x="20.1670%" y="462.50"></text></g><g><title>core::ptr::mut_ptr::_$LT$impl$u20$$BP$mut$u20$T$GT$::offset::hce700960f39f55c2 (mut_ptr.rs:479) (1 samples, 0.41%)</title><rect x="19.9170%" y="468" width="0.4149%" height="15" fill="rgb(224,169,11)" fg:x="48" fg:w="1"/><text x="20.1670%" y="478.50"></text></g><g><title>hashbrown::map::HashMap$LT$K$C$V$C$S$C$A$GT$::insert::h40d94036d1d85dbd (map.rs:1679) (6 samples, 2.49%)</title><rect x="18.6722%" y="388" width="2.4896%" height="15" fill="rgb(250,166,2)" fg:x="45" fg:w="6"/><text x="18.9222%" y="398.50">ha..</text></g><g><title>hashbrown::raw::RawTable$LT$T$C$A$GT$::insert::ha0ff13a4d4c75eef (mod.rs:732) (2 samples, 0.83%)</title><rect x="20.3320%" y="404" width="0.8299%" height="15" fill="rgb(242,216,29)" fg:x="49" fg:w="2"/><text x="20.5820%" y="414.50"></text></g><g><title>hashbrown::raw::Bucket$LT$T$GT$::write::h95b6ca2c82d2c3c8 (mod.rs:343) (2 samples, 0.83%)</title><rect x="20.3320%" y="420" width="0.8299%" height="15" fill="rgb(230,116,27)" fg:x="49" fg:w="2"/><text x="20.5820%" y="430.50"></text></g><g><title>core::ptr::mut_ptr::_$LT$impl$u20$$BP$mut$u20$T$GT$::write::hace759c835ec175a (mut_ptr.rs:1449) (2 samples, 0.83%)</title><rect x="20.3320%" y="436" width="0.8299%" height="15" fill="rgb(228,99,48)" fg:x="49" fg:w="2"/><text x="20.5820%" y="446.50"></text></g><g><title>core::ptr::write::h4388624466fdd0a8 (mod.rs:1354) (2 samples, 0.83%)</title><rect x="20.3320%" y="452" width="0.8299%" height="15" fill="rgb(253,11,6)" fg:x="49" fg:w="2"/><text x="20.5820%" y="462.50"></text></g><g><title>hashbrown::raw::RawTable$LT$T$C$A$GT$::insert_no_grow::h566f28ce882fadbc (mod.rs:774) (18 samples, 7.47%)</title><rect x="14.1079%" y="372" width="7.4689%" height="15" fill="rgb(247,143,39)" fg:x="34" fg:w="18"/><text x="14.3579%" y="382.50">hashbrown:..</text></g><g><title>hashbrown::raw::RawTableInner$LT$A$GT$::prepare_insert_slot::h76db65a11f5e0847 (mod.rs:1125) (1 samples, 0.41%)</title><rect x="21.1618%" y="388" width="0.4149%" height="15" fill="rgb(236,97,10)" fg:x="51" fg:w="1"/><text x="21.4118%" y="398.50"></text></g><g><title>hashbrown::raw::RawTableInner$LT$A$GT$::set_ctrl_h2::h072d71c25b35adb8 (mod.rs:1282) (1 samples, 0.41%)</title><rect x="21.1618%" y="404" width="0.4149%" height="15" fill="rgb(233,208,19)" fg:x="51" fg:w="1"/><text x="21.4118%" y="414.50"></text></g><g><title>hashbrown::raw::RawTableInner$LT$A$GT$::set_ctrl::hf3ca54e4320890f6 (mod.rs:1317) (1 samples, 0.41%)</title><rect x="21.1618%" y="420" width="0.4149%" height="15" fill="rgb(216,164,2)" fg:x="51" fg:w="1"/><text x="21.4118%" y="430.50"></text></g><g><title>numpy::borrow::shared::BorrowFlags::acquire::h677a3605c48f10f6 (shared.rs:292) (19 samples, 7.88%)</title><rect x="14.1079%" y="324" width="7.8838%" height="15" fill="rgb(220,129,5)" fg:x="34" fg:w="19"/><text x="14.3579%" y="334.50">numpy::borr..</text></g><g><title>std::collections::hash::map::VacantEntry$LT$K$C$V$GT$::insert::h886b94d65637a6fe (map.rs:2986) (19 samples, 7.88%)</title><rect x="14.1079%" y="340" width="7.8838%" height="15" fill="rgb(242,17,10)" fg:x="34" fg:w="19"/><text x="14.3579%" y="350.50">std::collec..</text></g><g><title>hashbrown::rustc_entry::RustcVacantEntry$LT$K$C$V$C$A$GT$::insert::h1fa82629064691f8 (rustc_entry.rs:576) (19 samples, 7.88%)</title><rect x="14.1079%" y="356" width="7.8838%" height="15" fill="rgb(242,107,0)" fg:x="34" fg:w="19"/><text x="14.3579%" y="366.50">hashbrown::..</text></g><g><title>hashbrown::raw::RawTable$LT$T$C$A$GT$::insert_no_grow::h566f28ce882fadbc (mod.rs:781) (1 samples, 0.41%)</title><rect x="21.5768%" y="372" width="0.4149%" height="15" fill="rgb(251,28,31)" fg:x="52" fg:w="1"/><text x="21.8268%" y="382.50"></text></g><g><title>hashbrown::raw::Bucket$LT$T$GT$::write::hda79085e3950b1fa (mod.rs:343) (1 samples, 0.41%)</title><rect x="21.5768%" y="388" width="0.4149%" height="15" fill="rgb(233,223,10)" fg:x="52" fg:w="1"/><text x="21.8268%" y="398.50"></text></g><g><title>core::ptr::mut_ptr::_$LT$impl$u20$$BP$mut$u20$T$GT$::write::h54a9b3c2f188cd1e (mut_ptr.rs:1449) (1 samples, 0.41%)</title><rect x="21.5768%" y="404" width="0.4149%" height="15" fill="rgb(215,21,27)" fg:x="52" fg:w="1"/><text x="21.8268%" y="414.50"></text></g><g><title>core::ptr::write::h76bf2a5e4aea2ac1 (mod.rs:1354) (1 samples, 0.41%)</title><rect x="21.5768%" y="420" width="0.4149%" height="15" fill="rgb(232,23,21)" fg:x="52" fg:w="1"/><text x="21.8268%" y="430.50"></text></g><g><title>numpy::borrow::shared::data_range::h143487adb8af9475 (shared.rs:410) (1 samples, 0.41%)</title><rect x="21.9917%" y="340" width="0.4149%" height="15" fill="rgb(244,5,23)" fg:x="53" fg:w="1"/><text x="22.2417%" y="350.50"></text></g><g><title>_$LT$core..iter..adapters..zip..Zip$LT$A$C$B$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$::next::h28363fb2880210ce (zip.rs:84) (1 samples, 0.41%)</title><rect x="21.9917%" y="356" width="0.4149%" height="15" fill="rgb(226,81,46)" fg:x="53" fg:w="1"/><text x="22.2417%" y="366.50"></text></g><g><title>_$LT$core..iter..adapters..zip..Zip$LT$A$C$B$GT$$u20$as$u20$core..iter..adapters..zip..ZipImpl$LT$A$C$B$GT$$GT$::next::h1b00b32cbf4c58c5 (zip.rs:270) (1 samples, 0.41%)</title><rect x="21.9917%" y="372" width="0.4149%" height="15" fill="rgb(247,70,30)" fg:x="53" fg:w="1"/><text x="22.2417%" y="382.50"></text></g><g><title>numpy::borrow::shared::acquire_shared::h3885b674b6778180 (shared.rs:53) (32 samples, 13.28%)</title><rect x="9.5436%" y="308" width="13.2780%" height="15" fill="rgb(212,68,19)" fg:x="23" fg:w="32"/><text x="9.7936%" y="318.50">numpy::borrow::share..</text></g><g><title>numpy::borrow::shared::borrow_key::hdb7fa9b48f0b83d1 (shared.rs:381) (2 samples, 0.83%)</title><rect x="21.9917%" y="324" width="0.8299%" height="15" fill="rgb(240,187,13)" fg:x="53" fg:w="2"/><text x="22.2417%" y="334.50"></text></g><g><title>numpy::borrow::shared::data_range::h143487adb8af9475 (shared.rs:411) (1 samples, 0.41%)</title><rect x="22.4066%" y="340" width="0.4149%" height="15" fill="rgb(223,113,26)" fg:x="54" fg:w="1"/><text x="22.6566%" y="350.50"></text></g><g><title>_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$::branch::hdad67778018b314a (result.rs:2049) (45 samples, 18.67%)</title><rect x="4.5643%" y="212" width="18.6722%" height="15" fill="rgb(206,192,2)" fg:x="11" fg:w="45"/><text x="4.8143%" y="222.50">_$LT$core..result..Result$LT$..</text></g><g><title>_$LT$numpy..borrow..PyReadonlyArray$LT$T$C$D$GT$$u20$as$u20$pyo3..conversion..FromPyObject$GT$::extract::h4a99d77495e7c0ba (mod.rs:232) (34 samples, 14.11%)</title><rect x="9.1286%" y="228" width="14.1079%" height="15" fill="rgb(241,108,4)" fg:x="22" fg:w="34"/><text x="9.3786%" y="238.50">_$LT$numpy..borrow..P..</text></g><g><title>numpy::array::PyArray$LT$T$C$D$GT$::readonly::h76446bbad72563a9 (array.rs:912) (34 samples, 14.11%)</title><rect x="9.1286%" y="244" width="14.1079%" height="15" fill="rgb(247,173,49)" fg:x="22" fg:w="34"/><text x="9.3786%" y="254.50">numpy::array::PyArray..</text></g><g><title>numpy::array::PyArray$LT$T$C$D$GT$::try_readonly::hc8333b911758503d (array.rs:901) (34 samples, 14.11%)</title><rect x="9.1286%" y="260" width="14.1079%" height="15" fill="rgb(224,114,35)" fg:x="22" fg:w="34"/><text x="9.3786%" y="270.50">numpy::array::PyArray..</text></g><g><title>numpy::borrow::PyReadonlyArray$LT$T$C$D$GT$::try_new::h006302905e7c2f6f (mod.rs:242) (34 samples, 14.11%)</title><rect x="9.1286%" y="276" width="14.1079%" height="15" fill="rgb(245,159,27)" fg:x="22" fg:w="34"/><text x="9.3786%" y="286.50">numpy::borrow::PyRead..</text></g><g><title>numpy::borrow::shared::acquire::h73eaa1417701652d (shared.rs:176) (34 samples, 14.11%)</title><rect x="9.1286%" y="292" width="14.1079%" height="15" fill="rgb(245,172,44)" fg:x="22" fg:w="34"/><text x="9.3786%" y="302.50">numpy::borrow::shared..</text></g><g><title>numpy::borrow::shared::acquire_shared::h3885b674b6778180 (shared.rs:57) (1 samples, 0.41%)</title><rect x="22.8216%" y="308" width="0.4149%" height="15" fill="rgb(236,23,11)" fg:x="55" fg:w="1"/><text x="23.0716%" y="318.50"></text></g><g><title>numpy::array::PyArray$LT$T$C$D$GT$::as_array::h92483ae4e175f154 (array.rs:995) (1 samples, 0.41%)</title><rect x="23.2365%" y="212" width="0.4149%" height="15" fill="rgb(205,117,38)" fg:x="56" fg:w="1"/><text x="23.4865%" y="222.50"></text></g><g><title>ndarray::dimension::dynindeximpl::IxDynRepr$LT$T$GT$::copy_from::h9f783c1f36e29e23 (dynindeximpl.rs:54) (3 samples, 1.24%)</title><rect x="24.0664%" y="308" width="1.2448%" height="15" fill="rgb(237,72,25)" fg:x="58" fg:w="3"/><text x="24.3164%" y="318.50"></text></g><g><title>core::slice::_$LT$impl$u20$$u5b$T$u5d$$GT$::copy_from_slice::h28d20bce43bc5474 (mod.rs:3355) (3 samples, 1.24%)</title><rect x="24.0664%" y="324" width="1.2448%" height="15" fill="rgb(244,70,9)" fg:x="58" fg:w="3"/><text x="24.3164%" y="334.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping::h1eae175bba54d8b7 (intrinsics.rs:2393) (3 samples, 1.24%)</title><rect x="24.0664%" y="340" width="1.2448%" height="15" fill="rgb(217,125,39)" fg:x="58" fg:w="3"/><text x="24.3164%" y="350.50"></text></g><g><title>0x7fc86dee8960 (libc-2.31.so) (1 samples, 0.41%)</title><rect x="24.8963%" y="356" width="0.4149%" height="15" fill="rgb(235,36,10)" fg:x="60" fg:w="1"/><text x="25.1463%" y="366.50"></text></g><g><title>numpy::array::PyArray$LT$T$C$D$GT$::as_array::h92483ae4e175f154 (array.rs:996) (8 samples, 3.32%)</title><rect x="23.6515%" y="212" width="3.3195%" height="15" fill="rgb(251,123,47)" fg:x="57" fg:w="8"/><text x="23.9015%" y="222.50">num..</text></g><g><title>numpy::array::PyArray$LT$T$C$D$GT$::as_view::hde606c8b36d69bd7 (array.rs:969) (8 samples, 3.32%)</title><rect x="23.6515%" y="228" width="3.3195%" height="15" fill="rgb(221,13,13)" fg:x="57" fg:w="8"/><text x="23.9015%" y="238.50">num..</text></g><g><title>numpy::array::PyArray$LT$T$C$D$GT$::as_view::inner::h025eacbd318ca10a (array.rs:944) (8 samples, 3.32%)</title><rect x="23.6515%" y="244" width="3.3195%" height="15" fill="rgb(238,131,9)" fg:x="57" fg:w="8"/><text x="23.9015%" y="254.50">num..</text></g><g><title>ndarray::dimension::dim::Dim::h0fef6d2326776550 (dim.rs:64) (8 samples, 3.32%)</title><rect x="23.6515%" y="260" width="3.3195%" height="15" fill="rgb(211,50,8)" fg:x="57" fg:w="8"/><text x="23.9015%" y="270.50">nda..</text></g><g><title>ndarray::dimension::ndindex::_$LT$impl$u20$ndarray..dimension..conversion..IntoDimension$u20$for$u20$$RF$$u5b$usize$u5d$$GT$::into_dimension::hd83d3cc99c33106a (ndindex.rs:204) (8 samples, 3.32%)</title><rect x="23.6515%" y="276" width="3.3195%" height="15" fill="rgb(245,182,24)" fg:x="57" fg:w="8"/><text x="23.9015%" y="286.50">nda..</text></g><g><title>_$LT$ndarray..dimension..dynindeximpl..IxDynImpl$u20$as$u20$core..convert..From$LT$$RF$$u5b$usize$u5d$$GT$$GT$::from::hddbef616b5070d58 (dynindeximpl.rs:164) (8 samples, 3.32%)</title><rect x="23.6515%" y="292" width="3.3195%" height="15" fill="rgb(242,14,37)" fg:x="57" fg:w="8"/><text x="23.9015%" y="302.50">_$L..</text></g><g><title>ndarray::dimension::dynindeximpl::IxDynRepr$LT$T$GT$::copy_from::h9f783c1f36e29e23 (dynindeximpl.rs:55) (4 samples, 1.66%)</title><rect x="25.3112%" y="308" width="1.6598%" height="15" fill="rgb(246,228,12)" fg:x="61" fg:w="4"/><text x="25.5612%" y="318.50"></text></g><g><title>numpy::array::PyArray$LT$T$C$D$GT$::as_array::h92483ae4e175f154 (array.rs:997) (1 samples, 0.41%)</title><rect x="26.9710%" y="212" width="0.4149%" height="15" fill="rgb(213,55,15)" fg:x="65" fg:w="1"/><text x="27.2210%" y="222.50"></text></g><g><title>unicode_dealloc (python3.10) (3 samples, 1.24%)</title><rect x="45.6432%" y="228" width="1.2448%" height="15" fill="rgb(209,9,3)" fg:x="110" fg:w="3"/><text x="45.8932%" y="238.50"></text></g><g><title>0x7fc86dee1c06 (libc-2.31.so) (2 samples, 0.83%)</title><rect x="48.9627%" y="244" width="0.8299%" height="15" fill="rgb(230,59,30)" fg:x="118" fg:w="2"/><text x="49.2127%" y="254.50"></text></g><g><title>unicode_eq.lto_priv.1 (python3.10) (8 samples, 3.32%)</title><rect x="46.8880%" y="228" width="3.3195%" height="15" fill="rgb(209,121,21)" fg:x="113" fg:w="8"/><text x="47.1380%" y="238.50">uni..</text></g><g><title>0x7fc86dee1c0f (libc-2.31.so) (1 samples, 0.41%)</title><rect x="49.7925%" y="244" width="0.4149%" height="15" fill="rgb(220,109,13)" fg:x="120" fg:w="1"/><text x="50.0425%" y="254.50"></text></g><g><title>pyo3::instance::Py$LT$T$GT$::getattr::hf864d0dea616e4dc (instance.rs) (67 samples, 27.80%)</title><rect x="27.3859%" y="212" width="27.8008%" height="15" fill="rgb(232,18,1)" fg:x="66" fg:w="67"/><text x="27.6359%" y="222.50">pyo3::instance::Py$LT$T$GT$::getattr::hf864d0..</text></g><g><title>unicode_hash (python3.10) (12 samples, 4.98%)</title><rect x="50.2075%" y="228" width="4.9793%" height="15" fill="rgb(215,41,42)" fg:x="121" fg:w="12"/><text x="50.4575%" y="238.50">unicod..</text></g><g><title>core::ptr::non_null::NonNull$LT$T$GT$::new::h5a1e274ff84a96cd (non_null.rs:223) (7 samples, 2.90%)</title><rect x="55.1867%" y="324" width="2.9046%" height="15" fill="rgb(224,123,36)" fg:x="133" fg:w="7"/><text x="55.4367%" y="334.50">co..</text></g><g><title>core::ptr::mut_ptr::_$LT$impl$u20$$BP$mut$u20$T$GT$::is_null::h3c2ec8eaa992eb04 (mut_ptr.rs:50) (7 samples, 2.90%)</title><rect x="55.1867%" y="340" width="2.9046%" height="15" fill="rgb(240,125,3)" fg:x="133" fg:w="7"/><text x="55.4367%" y="350.50">co..</text></g><g><title>core::ptr::mut_ptr::_$LT$impl$u20$$BP$mut$u20$T$GT$::is_null::runtime_impl::hf4e194c065b800f2 (mut_ptr.rs:36) (7 samples, 2.90%)</title><rect x="55.1867%" y="356" width="2.9046%" height="15" fill="rgb(205,98,50)" fg:x="133" fg:w="7"/><text x="55.4367%" y="366.50">co..</text></g><g><title>std::thread::local::LocalKey$LT$T$GT$::try_with::h495ad07b773bce1c (local.rs:445) (2 samples, 0.83%)</title><rect x="58.0913%" y="340" width="0.8299%" height="15" fill="rgb(205,185,37)" fg:x="140" fg:w="2"/><text x="58.3413%" y="350.50"></text></g><g><title>pyo3::gil::OWNED_OBJECTS::__getit::hff8f19d5becbfdf3 (local.rs:346) (2 samples, 0.83%)</title><rect x="58.0913%" y="356" width="0.8299%" height="15" fill="rgb(238,207,15)" fg:x="140" fg:w="2"/><text x="58.3413%" y="366.50"></text></g><g><title>std::thread::local::fast::Key$LT$T$GT$::get::h9558217c034c3f5e (local.rs:968) (2 samples, 0.83%)</title><rect x="58.0913%" y="372" width="0.8299%" height="15" fill="rgb(213,199,42)" fg:x="140" fg:w="2"/><text x="58.3413%" y="382.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner$LT$T$GT$::get::h12fc9fb59d7288ee (local.rs:802) (1 samples, 0.41%)</title><rect x="58.5062%" y="388" width="0.4149%" height="15" fill="rgb(235,201,11)" fg:x="141" fg:w="1"/><text x="58.7562%" y="398.50"></text></g><g><title>core::option::Option$LT$T$GT$::as_ref::h9bc9cbbf00c3c8cd (option.rs:676) (1 samples, 0.41%)</title><rect x="58.5062%" y="404" width="0.4149%" height="15" fill="rgb(207,46,11)" fg:x="141" fg:w="1"/><text x="58.7562%" y="414.50"></text></g><g><title>0x7fc85e71c040 (poly_match_rs/poly_match_rs.cpython-310-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="58.5062%" y="420" width="0.4149%" height="15" fill="rgb(241,35,35)" fg:x="141" fg:w="1"/><text x="58.7562%" y="430.50"></text></g><g><title>alloc::vec::Vec$LT$T$C$A$GT$::push::h47de668add088c8c (mod.rs:1839) (1 samples, 0.41%)</title><rect x="58.9212%" y="372" width="0.4149%" height="15" fill="rgb(243,32,47)" fg:x="142" fg:w="1"/><text x="59.1712%" y="382.50"></text></g><g><title>pyo3::types::string::PyString::new::h5811bdfa8261ad12 (string.rs:141) (11 samples, 4.56%)</title><rect x="55.1867%" y="244" width="4.5643%" height="15" fill="rgb(247,202,23)" fg:x="133" fg:w="11"/><text x="55.4367%" y="254.50">pyo3:..</text></g><g><title>pyo3::marker::Python::from_owned_ptr::hda4dae3c44abf8d1 (marker.rs:711) (11 samples, 4.56%)</title><rect x="55.1867%" y="260" width="4.5643%" height="15" fill="rgb(219,102,11)" fg:x="133" fg:w="11"/><text x="55.4367%" y="270.50">pyo3:..</text></g><g><title>pyo3::conversion::FromPyPointer::from_owned_ptr::hc8071ea8a361fd10 (conversion.rs:565) (11 samples, 4.56%)</title><rect x="55.1867%" y="276" width="4.5643%" height="15" fill="rgb(243,110,44)" fg:x="133" fg:w="11"/><text x="55.4367%" y="286.50">pyo3:..</text></g><g><title>pyo3::conversion::FromPyPointer::from_owned_ptr_or_panic::h67cc9f411c9abaa5 (conversion.rs:557) (11 samples, 4.56%)</title><rect x="55.1867%" y="292" width="4.5643%" height="15" fill="rgb(222,74,54)" fg:x="133" fg:w="11"/><text x="55.4367%" y="302.50">pyo3:..</text></g><g><title>_$LT$T$u20$as$u20$pyo3..conversion..FromPyPointer$GT$::from_owned_ptr_or_opt::hdfa2be0dd55c7e0e (conversion.rs:616) (11 samples, 4.56%)</title><rect x="55.1867%" y="308" width="4.5643%" height="15" fill="rgb(216,99,12)" fg:x="133" fg:w="11"/><text x="55.4367%" y="318.50">_$LT$..</text></g><g><title>pyo3::gil::register_owned::h83990b8a750cd1a5 (gil.rs:433) (4 samples, 1.66%)</title><rect x="58.0913%" y="324" width="1.6598%" height="15" fill="rgb(226,22,26)" fg:x="140" fg:w="4"/><text x="58.3413%" y="334.50"></text></g><g><title>std::thread::local::LocalKey$LT$T$GT$::try_with::h495ad07b773bce1c (local.rs:446) (2 samples, 0.83%)</title><rect x="58.9212%" y="340" width="0.8299%" height="15" fill="rgb(217,163,10)" fg:x="142" fg:w="2"/><text x="59.1712%" y="350.50"></text></g><g><title>pyo3::gil::register_owned::_$u7b$$u7b$closure$u7d$$u7d$::hbcf5e0ce9d37eec2 (gil.rs:433) (2 samples, 0.83%)</title><rect x="58.9212%" y="356" width="0.8299%" height="15" fill="rgb(213,25,53)" fg:x="142" fg:w="2"/><text x="59.1712%" y="366.50"></text></g><g><title>core::cell::RefCell$LT$T$GT$::borrow_mut::h00cb08ee6bd0e48c (cell.rs:969) (1 samples, 0.41%)</title><rect x="59.3361%" y="372" width="0.4149%" height="15" fill="rgb(252,105,26)" fg:x="143" fg:w="1"/><text x="59.5861%" y="382.50"></text></g><g><title>core::cell::RefCell$LT$T$GT$::try_borrow_mut::hb8d6d71b6e7b5391 (cell.rs:998) (1 samples, 0.41%)</title><rect x="59.3361%" y="388" width="0.4149%" height="15" fill="rgb(220,39,43)" fg:x="143" fg:w="1"/><text x="59.5861%" y="398.50"></text></g><g><title>core::cell::BorrowRefMut::new::h3cc4f84050df9645 (cell.rs:1693) (1 samples, 0.41%)</title><rect x="59.3361%" y="404" width="0.4149%" height="15" fill="rgb(229,68,48)" fg:x="143" fg:w="1"/><text x="59.5861%" y="414.50"></text></g><g><title>pyo3::instance::Py$LT$T$GT$::getattr::hf864d0dea616e4dc (instance.rs:575) (12 samples, 4.98%)</title><rect x="55.1867%" y="212" width="4.9793%" height="15" fill="rgb(252,8,32)" fg:x="133" fg:w="12"/><text x="55.4367%" y="222.50">pyo3::..</text></g><g><title>pyo3::conversions::std::string::_$LT$impl$u20$pyo3..conversion..IntoPy$LT$pyo3..instance..Py$LT$pyo3..types..string..PyString$GT$$GT$$u20$for$u20$$RF$str$GT$::into_py::hbb9267df086e6656 (string.rs) (12 samples, 4.98%)</title><rect x="55.1867%" y="228" width="4.9793%" height="15" fill="rgb(223,20,43)" fg:x="133" fg:w="12"/><text x="55.4367%" y="238.50">pyo3::..</text></g><g><title>pyo3::types::string::PyString::new::h5811bdfa8261ad12 (string.rs:142) (1 samples, 0.41%)</title><rect x="59.7510%" y="244" width="0.4149%" height="15" fill="rgb(229,81,49)" fg:x="144" fg:w="1"/><text x="60.0010%" y="254.50"></text></g><g><title>0x7fc85e71c040 (poly_match_rs/poly_match_rs.cpython-310-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="60.1660%" y="404" width="0.4149%" height="15" fill="rgb(236,28,36)" fg:x="145" fg:w="1"/><text x="60.4160%" y="414.50"></text></g><g><title>poly_match_rs::lib_v1::find_close_polygons::h2c922349e6052029 (lib_v1.rs:16) (139 samples, 57.68%)</title><rect x="4.1494%" y="196" width="57.6763%" height="15" fill="chartreuse" fg:x="10" fg:w="139"/><text x="4.3994%" y="206.50">poly_match_rs::lib_v1::find_close_polygons::h2c922349e6052029 (lib_v1.rs:16)</text></g><g><title>pyo3::instance::Py$LT$T$GT$::getattr::hf864d0dea616e4dc (instance.rs:578) (4 samples, 1.66%)</title><rect x="60.1660%" y="212" width="1.6598%" height="15" fill="rgb(249,174,33)" fg:x="145" fg:w="4"/><text x="60.4160%" y="222.50"></text></g><g><title>pyo3::instance::Py$LT$T$GT$::from_owned_ptr_or_err::h1fe2c4692db59499 (instance.rs:768) (4 samples, 1.66%)</title><rect x="60.1660%" y="228" width="1.6598%" height="15" fill="rgb(233,201,37)" fg:x="145" fg:w="4"/><text x="60.4160%" y="238.50"></text></g><g><title>core::ptr::non_null::NonNull$LT$T$GT$::new::hb3c05c1eeb61c178 (non_null.rs:223) (4 samples, 1.66%)</title><rect x="60.1660%" y="244" width="1.6598%" height="15" fill="rgb(221,78,26)" fg:x="145" fg:w="4"/><text x="60.4160%" y="254.50"></text></g><g><title>core::ptr::mut_ptr::_$LT$impl$u20$$BP$mut$u20$T$GT$::is_null::ha8f2a170dac96b63 (mut_ptr.rs:50) (4 samples, 1.66%)</title><rect x="60.1660%" y="260" width="1.6598%" height="15" fill="rgb(250,127,30)" fg:x="145" fg:w="4"/><text x="60.4160%" y="270.50"></text></g><g><title>core::ptr::mut_ptr::_$LT$impl$u20$$BP$mut$u20$T$GT$::is_null::runtime_impl::hf4e194c065b800f2 (mut_ptr.rs:36) (4 samples, 1.66%)</title><rect x="60.1660%" y="276" width="1.6598%" height="15" fill="rgb(230,49,44)" fg:x="145" fg:w="4"/><text x="60.4160%" y="286.50"></text></g><g><title>pyo3::gil::register_decref::hb12f6e64bb3f5814 (gil.rs:419) (4 samples, 1.66%)</title><rect x="60.1660%" y="292" width="1.6598%" height="15" fill="rgb(229,67,23)" fg:x="145" fg:w="4"/><text x="60.4160%" y="302.50"></text></g><g><title>pyo3::gil::gil_is_acquired::h09b902bc8188895d (gil.rs:39) (4 samples, 1.66%)</title><rect x="60.1660%" y="308" width="1.6598%" height="15" fill="rgb(249,83,47)" fg:x="145" fg:w="4"/><text x="60.4160%" y="318.50"></text></g><g><title>std::thread::local::LocalKey$LT$T$GT$::try_with::h872a0f3266373274 (local.rs:445) (4 samples, 1.66%)</title><rect x="60.1660%" y="324" width="1.6598%" height="15" fill="rgb(215,43,3)" fg:x="145" fg:w="4"/><text x="60.4160%" y="334.50"></text></g><g><title>pyo3::gil::GIL_COUNT::__getit::he03149d6372f31bb (local.rs:346) (4 samples, 1.66%)</title><rect x="60.1660%" y="340" width="1.6598%" height="15" fill="rgb(238,154,13)" fg:x="145" fg:w="4"/><text x="60.4160%" y="350.50"></text></g><g><title>std::thread::local::fast::Key$LT$T$GT$::get::hd91dd9385144e0ef (local.rs:968) (4 samples, 1.66%)</title><rect x="60.1660%" y="356" width="1.6598%" height="15" fill="rgb(219,56,2)" fg:x="145" fg:w="4"/><text x="60.4160%" y="366.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner$LT$T$GT$::get::h644477a45aa7161a (local.rs:802) (4 samples, 1.66%)</title><rect x="60.1660%" y="372" width="1.6598%" height="15" fill="rgb(233,0,4)" fg:x="145" fg:w="4"/><text x="60.4160%" y="382.50"></text></g><g><title>core::option::Option$LT$T$GT$::as_ref::h1a0c32c8659e37db (option.rs:676) (4 samples, 1.66%)</title><rect x="60.1660%" y="388" width="1.6598%" height="15" fill="rgb(235,30,7)" fg:x="145" fg:w="4"/><text x="60.4160%" y="398.50"></text></g><g><title>__tls_get_addr (ld-2.31.so) (3 samples, 1.24%)</title><rect x="60.5809%" y="404" width="1.2448%" height="15" fill="rgb(250,79,13)" fg:x="146" fg:w="3"/><text x="60.8309%" y="414.50"></text></g><g><title>ndarray::impl_methods::_$LT$impl$u20$ndarray..ArrayBase$LT$S$C$D$GT$$GT$::to_owned::haa354ecc7c2adb5e (impl_methods.rs:207) (1 samples, 0.41%)</title><rect x="61.8257%" y="292" width="0.4149%" height="15" fill="rgb(211,146,34)" fg:x="149" fg:w="1"/><text x="62.0757%" y="302.50"></text></g><g><title>ndarray::impl_methods::_$LT$impl$u20$ndarray..ArrayBase$LT$S$C$D$GT$$GT$::to_owned::haa354ecc7c2adb5e (impl_methods.rs:212) (1 samples, 0.41%)</title><rect x="62.2407%" y="292" width="0.4149%" height="15" fill="rgb(228,22,38)" fg:x="150" fg:w="1"/><text x="62.4907%" y="302.50"></text></g><g><title>ndarray::impl_methods::_$LT$impl$u20$ndarray..ArrayBase$LT$S$C$D$GT$$GT$::as_slice_memory_order::ha847b7bf42668094 (impl_methods.rs:1724) (1 samples, 0.41%)</title><rect x="62.2407%" y="308" width="0.4149%" height="15" fill="rgb(235,168,5)" fg:x="150" fg:w="1"/><text x="62.4907%" y="318.50"></text></g><g><title>alloc::raw_vec::RawVec$LT$T$C$A$GT$::allocate_in::hb70354b251e7d09a (raw_vec.rs:176) (2 samples, 0.83%)</title><rect x="62.6556%" y="404" width="0.8299%" height="15" fill="rgb(221,155,16)" fg:x="151" fg:w="2"/><text x="62.9056%" y="414.50"></text></g><g><title>core::alloc::layout::Layout::array::h5d9e36a854357d04 (layout.rs:438) (2 samples, 0.83%)</title><rect x="62.6556%" y="420" width="0.8299%" height="15" fill="rgb(215,215,53)" fg:x="151" fg:w="2"/><text x="62.9056%" y="430.50"></text></g><g><title>core::alloc::layout::Layout::array::inner::h8dc409c077d77f98 (layout.rs:452) (2 samples, 0.83%)</title><rect x="62.6556%" y="436" width="0.8299%" height="15" fill="rgb(223,4,10)" fg:x="151" fg:w="2"/><text x="62.9056%" y="446.50"></text></g><g><title>numpy::borrow::shared::get_or_insert_shared::h0d3d91c72eb51ce1 (shared.rs:108) (8 samples, 3.32%)</title><rect x="61.8257%" y="260" width="3.3195%" height="15" fill="rgb(234,103,6)" fg:x="149" fg:w="8"/><text x="62.0757%" y="270.50">num..</text></g><g><title>core::cell::Cell$LT$T$GT$::get::hbeb10e4ae86737f2 (cell.rs:452) (8 samples, 3.32%)</title><rect x="61.8257%" y="276" width="3.3195%" height="15" fill="rgb(227,97,0)" fg:x="149" fg:w="8"/><text x="62.0757%" y="286.50">cor..</text></g><g><title>ndarray::impl_methods::_$LT$impl$u20$ndarray..ArrayBase$LT$S$C$D$GT$$GT$::to_owned::haa354ecc7c2adb5e (impl_methods.rs:216) (6 samples, 2.49%)</title><rect x="62.6556%" y="292" width="2.4896%" height="15" fill="rgb(234,150,53)" fg:x="151" fg:w="6"/><text x="62.9056%" y="302.50">nd..</text></g><g><title>alloc::slice::_$LT$impl$u20$$u5b$T$u5d$$GT$::to_vec::h0fa8768c89af1eec (slice.rs:416) (6 samples, 2.49%)</title><rect x="62.6556%" y="308" width="2.4896%" height="15" fill="rgb(228,201,54)" fg:x="151" fg:w="6"/><text x="62.9056%" y="318.50">al..</text></g><g><title>alloc::slice::_$LT$impl$u20$$u5b$T$u5d$$GT$::to_vec_in::ha2e8281673c45b26 (slice.rs:441) (6 samples, 2.49%)</title><rect x="62.6556%" y="324" width="2.4896%" height="15" fill="rgb(222,22,37)" fg:x="151" fg:w="6"/><text x="62.9056%" y="334.50">al..</text></g><g><title>alloc::slice::hack::to_vec::ha6f84433dce3ec09 (slice.rs:111) (6 samples, 2.49%)</title><rect x="62.6556%" y="340" width="2.4896%" height="15" fill="rgb(237,53,32)" fg:x="151" fg:w="6"/><text x="62.9056%" y="350.50">al..</text></g><g><title>_$LT$T$u20$as$u20$alloc..slice..hack..ConvertVec$GT$::to_vec::h07771dced89789ce (slice.rs:162) (6 samples, 2.49%)</title><rect x="62.6556%" y="356" width="2.4896%" height="15" fill="rgb(233,25,53)" fg:x="151" fg:w="6"/><text x="62.9056%" y="366.50">_$..</text></g><g><title>alloc::vec::Vec$LT$T$C$A$GT$::with_capacity_in::hb723a4e1d4d23730 (mod.rs:676) (6 samples, 2.49%)</title><rect x="62.6556%" y="372" width="2.4896%" height="15" fill="rgb(210,40,34)" fg:x="151" fg:w="6"/><text x="62.9056%" y="382.50">al..</text></g><g><title>alloc::raw_vec::RawVec$LT$T$C$A$GT$::with_capacity_in::h929c33e1124a1154 (raw_vec.rs:131) (6 samples, 2.49%)</title><rect x="62.6556%" y="388" width="2.4896%" height="15" fill="rgb(241,220,44)" fg:x="151" fg:w="6"/><text x="62.9056%" y="398.50">al..</text></g><g><title>alloc::raw_vec::RawVec$LT$T$C$A$GT$::allocate_in::hb70354b251e7d09a (raw_vec.rs:185) (4 samples, 1.66%)</title><rect x="63.4855%" y="404" width="1.6598%" height="15" fill="rgb(235,28,35)" fg:x="153" fg:w="4"/><text x="63.7355%" y="414.50"></text></g><g><title>_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$::allocate::hac74fef94a98bd06 (alloc.rs:237) (4 samples, 1.66%)</title><rect x="63.4855%" y="420" width="1.6598%" height="15" fill="rgb(210,56,17)" fg:x="153" fg:w="4"/><text x="63.7355%" y="430.50"></text></g><g><title>alloc::alloc::Global::alloc_impl::h1aa3c68cdbca1a77 (alloc.rs:177) (4 samples, 1.66%)</title><rect x="63.4855%" y="436" width="1.6598%" height="15" fill="rgb(224,130,29)" fg:x="153" fg:w="4"/><text x="63.7355%" y="446.50"></text></g><g><title>alloc::alloc::alloc::hca725d004d5df332 (alloc.rs:95) (4 samples, 1.66%)</title><rect x="63.4855%" y="452" width="1.6598%" height="15" fill="rgb(235,212,8)" fg:x="153" fg:w="4"/><text x="63.7355%" y="462.50"></text></g><g><title>__rdl_alloc (alloc.rs:381) (4 samples, 1.66%)</title><rect x="63.4855%" y="468" width="1.6598%" height="15" fill="rgb(223,33,50)" fg:x="153" fg:w="4"/><text x="63.7355%" y="478.50"></text></g><g><title>std::sys::unix::alloc::_$LT$impl$u20$core..alloc..global..GlobalAlloc$u20$for$u20$std..alloc..System$GT$::alloc::h85ed699f0ccf1dcf (alloc.rs:14) (4 samples, 1.66%)</title><rect x="63.4855%" y="484" width="1.6598%" height="15" fill="rgb(219,149,13)" fg:x="153" fg:w="4"/><text x="63.7355%" y="494.50"></text></g><g><title>malloc (libc-2.31.so) (4 samples, 1.66%)</title><rect x="63.4855%" y="500" width="1.6598%" height="15" fill="rgb(250,156,29)" fg:x="153" fg:w="4"/><text x="63.7355%" y="510.50"></text></g><g><title>core::ptr::drop_in_place$LT$numpy..borrow..PyReadonlyArray$LT$f64$C$ndarray..dimension..dim..Dim$LT$$u5b$usize$u3b$$u20$1$u5d$$GT$$GT$$GT$::h0b76001ab2bf596f (mod.rs:490) (9 samples, 3.73%)</title><rect x="61.8257%" y="212" width="3.7344%" height="15" fill="rgb(216,193,19)" fg:x="149" fg:w="9"/><text x="62.0757%" y="222.50">core..</text></g><g><title>_$LT$numpy..borrow..PyReadonlyArray$LT$T$C$D$GT$$u20$as$u20$core..ops..drop..Drop$GT$::drop::hb731513d167a5bb4 (mod.rs:342) (9 samples, 3.73%)</title><rect x="61.8257%" y="228" width="3.7344%" height="15" fill="rgb(216,135,14)" fg:x="149" fg:w="9"/><text x="62.0757%" y="238.50">_$LT..</text></g><g><title>numpy::borrow::shared::release::h32435c08e3ca587e (shared.rs:197) (9 samples, 3.73%)</title><rect x="61.8257%" y="244" width="3.7344%" height="15" fill="rgb(241,47,5)" fg:x="149" fg:w="9"/><text x="62.0757%" y="254.50">nump..</text></g><g><title>numpy::borrow::shared::get_or_insert_shared::h0d3d91c72eb51ce1 (shared.rs:110) (1 samples, 0.41%)</title><rect x="65.1452%" y="260" width="0.4149%" height="15" fill="rgb(233,42,35)" fg:x="157" fg:w="1"/><text x="65.3952%" y="270.50"></text></g><g><title>0x7fc86ddf39cd (libc-2.31.so) (1 samples, 0.41%)</title><rect x="65.5602%" y="244" width="0.4149%" height="15" fill="rgb(231,13,6)" fg:x="158" fg:w="1"/><text x="65.8102%" y="254.50"></text></g><g><title>0x7fc86ddf3a21 (libc-2.31.so) (1 samples, 0.41%)</title><rect x="65.9751%" y="244" width="0.4149%" height="15" fill="rgb(207,181,40)" fg:x="159" fg:w="1"/><text x="66.2251%" y="254.50"></text></g><g><title>0x7fc86ddf3c90 (libc-2.31.so) (1 samples, 0.41%)</title><rect x="66.3900%" y="244" width="0.4149%" height="15" fill="rgb(254,173,49)" fg:x="160" fg:w="1"/><text x="66.6400%" y="254.50"></text></g><g><title>free (libc-2.31.so) (3 samples, 1.24%)</title><rect x="66.8050%" y="244" width="1.2448%" height="15" fill="rgb(221,1,38)" fg:x="161" fg:w="3"/><text x="67.0550%" y="254.50"></text></g><g><title>numpy::borrow::shared::release_shared::hfce4de11adb04ebc (shared.rs:77) (2 samples, 0.83%)</title><rect x="68.0498%" y="244" width="0.8299%" height="15" fill="rgb(206,124,46)" fg:x="164" fg:w="2"/><text x="68.2998%" y="254.50"></text></g><g><title>numpy::borrow::shared::BorrowFlags::release::h0c355e1290609b3a (shared.rs:302) (1 samples, 0.41%)</title><rect x="70.9544%" y="260" width="0.4149%" height="15" fill="rgb(249,21,11)" fg:x="171" fg:w="1"/><text x="71.2044%" y="270.50"></text></g><g><title>std::collections::hash::map::HashMap$LT$K$C$V$C$S$GT$::get_mut::h1fbdf56711931d07 (map.rs:1074) (1 samples, 0.41%)</title><rect x="70.9544%" y="276" width="0.4149%" height="15" fill="rgb(222,201,40)" fg:x="171" fg:w="1"/><text x="71.2044%" y="286.50"></text></g><g><title>hashbrown::map::HashMap$LT$K$C$V$C$S$C$A$GT$::get_mut::h592e6eb4b5a94bcc (map.rs:1369) (1 samples, 0.41%)</title><rect x="70.9544%" y="292" width="0.4149%" height="15" fill="rgb(235,61,29)" fg:x="171" fg:w="1"/><text x="71.2044%" y="302.50"></text></g><g><title>hashbrown::map::HashMap$LT$K$C$V$C$S$C$A$GT$::get_inner_mut::h64f413726098d683 (map.rs:1385) (1 samples, 0.41%)</title><rect x="70.9544%" y="308" width="0.4149%" height="15" fill="rgb(219,207,3)" fg:x="171" fg:w="1"/><text x="71.2044%" y="318.50"></text></g><g><title>hashbrown::raw::RawTable$LT$T$C$A$GT$::get_mut::he4d546296714c9e5 (mod.rs:841) (1 samples, 0.41%)</title><rect x="70.9544%" y="324" width="0.4149%" height="15" fill="rgb(222,56,46)" fg:x="171" fg:w="1"/><text x="71.2044%" y="334.50"></text></g><g><title>hashbrown::raw::RawTable$LT$T$C$A$GT$::find::hf282e7d88c86da63 (mod.rs:816) (1 samples, 0.41%)</title><rect x="70.9544%" y="340" width="0.4149%" height="15" fill="rgb(239,76,54)" fg:x="171" fg:w="1"/><text x="71.2044%" y="350.50"></text></g><g><title>hashbrown::raw::RawTableInner$LT$A$GT$::find_inner::h832a41c5f797b723 (mod.rs:1170) (1 samples, 0.41%)</title><rect x="70.9544%" y="356" width="0.4149%" height="15" fill="rgb(231,124,27)" fg:x="171" fg:w="1"/><text x="71.2044%" y="366.50"></text></g><g><title>hashbrown::raw::h2::hf01b74370be6934a (mod.rs:145) (1 samples, 0.41%)</title><rect x="70.9544%" y="372" width="0.4149%" height="15" fill="rgb(249,195,6)" fg:x="171" fg:w="1"/><text x="71.2044%" y="382.50"></text></g><g><title>_$LT$numpy..borrow..shared..BorrowKey$u20$as$u20$core..hash..Hash$GT$::hash::h1890035d42c07a5a (shared.rs:215) (1 samples, 0.41%)</title><rect x="71.3693%" y="372" width="0.4149%" height="15" fill="rgb(237,174,47)" fg:x="172" fg:w="1"/><text x="71.6193%" y="382.50"></text></g><g><title>core::hash::impls::_$LT$impl$u20$core..hash..Hash$u20$for$u20$$LP$T$C$B$RP$$GT$::hash::h4ac3a748e9181eab (mod.rs:920) (1 samples, 0.41%)</title><rect x="71.3693%" y="388" width="0.4149%" height="15" fill="rgb(206,201,31)" fg:x="172" fg:w="1"/><text x="71.6193%" y="398.50"></text></g><g><title>core::hash::impls::_$LT$impl$u20$core..hash..Hash$u20$for$u20$$BP$mut$u20$T$GT$::hash::h963931b825e2b644 (mod.rs:1003) (1 samples, 0.41%)</title><rect x="71.3693%" y="404" width="0.4149%" height="15" fill="rgb(231,57,52)" fg:x="172" fg:w="1"/><text x="71.6193%" y="414.50"></text></g><g><title>_$LT$rustc_hash..FxHasher$u20$as$u20$core..hash..Hasher$GT$::write_usize::hef653c5065dd641f (lib.rs:141) (1 samples, 0.41%)</title><rect x="71.3693%" y="420" width="0.4149%" height="15" fill="rgb(248,177,22)" fg:x="172" fg:w="1"/><text x="71.6193%" y="430.50"></text></g><g><title>rustc_hash::FxHasher::add_to_hash::h9e4e288e2deb736f (lib.rs:79) (1 samples, 0.41%)</title><rect x="71.3693%" y="436" width="0.4149%" height="15" fill="rgb(215,211,37)" fg:x="172" fg:w="1"/><text x="71.6193%" y="446.50"></text></g><g><title>core::num::_$LT$impl$u20$usize$GT$::rotate_left::h479e62273746d2c9 (uint_macros.rs:235) (1 samples, 0.41%)</title><rect x="71.3693%" y="452" width="0.4149%" height="15" fill="rgb(241,128,51)" fg:x="172" fg:w="1"/><text x="71.6193%" y="462.50"></text></g><g><title>hashbrown::map::HashMap$LT$K$C$V$C$S$C$A$GT$::get_inner_mut::h39938c634c8b9525 (map.rs:1384) (3 samples, 1.24%)</title><rect x="71.3693%" y="308" width="1.2448%" height="15" fill="rgb(227,165,31)" fg:x="172" fg:w="3"/><text x="71.6193%" y="318.50"></text></g><g><title>hashbrown::map::make_hash::h03c3023ef38b0f15 (map.rs:265) (3 samples, 1.24%)</title><rect x="71.3693%" y="324" width="1.2448%" height="15" fill="rgb(228,167,24)" fg:x="172" fg:w="3"/><text x="71.6193%" y="334.50"></text></g><g><title>core::hash::BuildHasher::hash_one::h4fbcb17a0cee6c70 (mod.rs:724) (3 samples, 1.24%)</title><rect x="71.3693%" y="340" width="1.2448%" height="15" fill="rgb(228,143,12)" fg:x="172" fg:w="3"/><text x="71.6193%" y="350.50"></text></g><g><title>core::hash::impls::_$LT$impl$u20$core..hash..Hash$u20$for$u20$$RF$T$GT$::hash::h35366a5335d4263f (mod.rs:975) (3 samples, 1.24%)</title><rect x="71.3693%" y="356" width="1.2448%" height="15" fill="rgb(249,149,8)" fg:x="172" fg:w="3"/><text x="71.6193%" y="366.50"></text></g><g><title>_$LT$numpy..borrow..shared..BorrowKey$u20$as$u20$core..hash..Hash$GT$::hash::h1890035d42c07a5a (shared.rs:217) (2 samples, 0.83%)</title><rect x="71.7842%" y="372" width="0.8299%" height="15" fill="rgb(243,35,44)" fg:x="173" fg:w="2"/><text x="72.0342%" y="382.50"></text></g><g><title>core::hash::impls::_$LT$impl$u20$core..hash..Hash$u20$for$u20$$BP$mut$u20$T$GT$::hash::h963931b825e2b644 (mod.rs:1003) (1 samples, 0.41%)</title><rect x="72.1992%" y="388" width="0.4149%" height="15" fill="rgb(246,89,9)" fg:x="174" fg:w="1"/><text x="72.4492%" y="398.50"></text></g><g><title>_$LT$rustc_hash..FxHasher$u20$as$u20$core..hash..Hasher$GT$::write_usize::hef653c5065dd641f (lib.rs:141) (1 samples, 0.41%)</title><rect x="72.1992%" y="404" width="0.4149%" height="15" fill="rgb(233,213,13)" fg:x="174" fg:w="1"/><text x="72.4492%" y="414.50"></text></g><g><title>rustc_hash::FxHasher::add_to_hash::h9e4e288e2deb736f (lib.rs:79) (1 samples, 0.41%)</title><rect x="72.1992%" y="420" width="0.4149%" height="15" fill="rgb(233,141,41)" fg:x="174" fg:w="1"/><text x="72.4492%" y="430.50"></text></g><g><title>core::num::_$LT$impl$u20$usize$GT$::wrapping_mul::h5eed7b3bfdf14434 (uint_macros.rs:1253) (1 samples, 0.41%)</title><rect x="72.1992%" y="436" width="0.4149%" height="15" fill="rgb(239,167,4)" fg:x="174" fg:w="1"/><text x="72.4492%" y="446.50"></text></g><g><title>hashbrown::raw::RawTableInner$LT$A$GT$::find_inner::h832a41c5f797b723 (mod.rs:1170) (3 samples, 1.24%)</title><rect x="73.4440%" y="356" width="1.2448%" height="15" fill="rgb(209,217,16)" fg:x="177" fg:w="3"/><text x="73.6940%" y="366.50"></text></g><g><title>hashbrown::raw::h2::hf01b74370be6934a (mod.rs:145) (3 samples, 1.24%)</title><rect x="73.4440%" y="372" width="1.2448%" height="15" fill="rgb(219,88,35)" fg:x="177" fg:w="3"/><text x="73.6940%" y="382.50"></text></g><g><title>hashbrown::raw::RawTableInner$LT$A$GT$::find_inner::h832a41c5f797b723 (mod.rs:1174) (1 samples, 0.41%)</title><rect x="74.6888%" y="356" width="0.4149%" height="15" fill="rgb(220,193,23)" fg:x="180" fg:w="1"/><text x="74.9388%" y="366.50"></text></g><g><title>hashbrown::raw::sse2::Group::load::ha24c08aec92cf1a7 (sse2.rs:50) (1 samples, 0.41%)</title><rect x="74.6888%" y="372" width="0.4149%" height="15" fill="rgb(230,90,52)" fg:x="180" fg:w="1"/><text x="74.9388%" y="382.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128::h58495a3decf8ae43 (sse2.rs:1204) (1 samples, 0.41%)</title><rect x="74.6888%" y="388" width="0.4149%" height="15" fill="rgb(252,106,19)" fg:x="180" fg:w="1"/><text x="74.9388%" y="398.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping::hf91b24d67f0f864a (intrinsics.rs:2393) (1 samples, 0.41%)</title><rect x="74.6888%" y="404" width="0.4149%" height="15" fill="rgb(206,74,20)" fg:x="180" fg:w="1"/><text x="74.9388%" y="414.50"></text></g><g><title>hashbrown::raw::RawTableInner$LT$A$GT$::find_inner::h832a41c5f797b723 (mod.rs:1177) (1 samples, 0.41%)</title><rect x="75.1037%" y="356" width="0.4149%" height="15" fill="rgb(230,138,44)" fg:x="181" fg:w="1"/><text x="75.3537%" y="366.50"></text></g><g><title>numpy::borrow::shared::BorrowFlags::release::h0c355e1290609b3a (shared.rs:304) (15 samples, 6.22%)</title><rect x="71.3693%" y="260" width="6.2241%" height="15" fill="rgb(235,182,43)" fg:x="172" fg:w="15"/><text x="71.6193%" y="270.50">numpy::b..</text></g><g><title>std::collections::hash::map::HashMap$LT$K$C$V$C$S$GT$::get_mut::hbf8e06f21dad60ec (map.rs:1074) (15 samples, 6.22%)</title><rect x="71.3693%" y="276" width="6.2241%" height="15" fill="rgb(242,16,51)" fg:x="172" fg:w="15"/><text x="71.6193%" y="286.50">std::col..</text></g><g><title>hashbrown::map::HashMap$LT$K$C$V$C$S$C$A$GT$::get_mut::h10f4e08afe01fe19 (map.rs:1369) (15 samples, 6.22%)</title><rect x="71.3693%" y="292" width="6.2241%" height="15" fill="rgb(248,9,4)" fg:x="172" fg:w="15"/><text x="71.6193%" y="302.50">hashbrow..</text></g><g><title>hashbrown::map::HashMap$LT$K$C$V$C$S$C$A$GT$::get_inner_mut::h39938c634c8b9525 (map.rs:1385) (12 samples, 4.98%)</title><rect x="72.6141%" y="308" width="4.9793%" height="15" fill="rgb(210,31,22)" fg:x="175" fg:w="12"/><text x="72.8641%" y="318.50">hashbr..</text></g><g><title>hashbrown::raw::RawTable$LT$T$C$A$GT$::get_mut::h84161e0bd792a13a (mod.rs:841) (10 samples, 4.15%)</title><rect x="73.4440%" y="324" width="4.1494%" height="15" fill="rgb(239,54,39)" fg:x="177" fg:w="10"/><text x="73.6940%" y="334.50">hashb..</text></g><g><title>hashbrown::raw::RawTable$LT$T$C$A$GT$::find::h011e086c0d04bb71 (mod.rs:816) (10 samples, 4.15%)</title><rect x="73.4440%" y="340" width="4.1494%" height="15" fill="rgb(230,99,41)" fg:x="177" fg:w="10"/><text x="73.6940%" y="350.50">hashb..</text></g><g><title>hashbrown::raw::RawTableInner$LT$A$GT$::find_inner::h832a41c5f797b723 (mod.rs:1179) (5 samples, 2.07%)</title><rect x="75.5187%" y="356" width="2.0747%" height="15" fill="rgb(253,106,12)" fg:x="182" fg:w="5"/><text x="75.7687%" y="366.50">h..</text></g><g><title>hashbrown::raw::RawTable$LT$T$C$A$GT$::find::_$u7b$$u7b$closure$u7d$$u7d$::hd47ede06d8672d5b (mod.rs:817) (5 samples, 2.07%)</title><rect x="75.5187%" y="372" width="2.0747%" height="15" fill="rgb(213,46,41)" fg:x="182" fg:w="5"/><text x="75.7687%" y="382.50">h..</text></g><g><title>hashbrown::map::equivalent_key::_$u7b$$u7b$closure$u7d$$u7d$::h5ed00d152d52f781 (map.rs:229) (5 samples, 2.07%)</title><rect x="75.5187%" y="388" width="2.0747%" height="15" fill="rgb(215,133,35)" fg:x="182" fg:w="5"/><text x="75.7687%" y="398.50">h..</text></g><g><title>_$LT$numpy..borrow..shared..BorrowKey$u20$as$u20$core..cmp..PartialEq$GT$::eq::hdfcc6f45fe1b7e07 (shared.rs:219) (5 samples, 2.07%)</title><rect x="75.5187%" y="404" width="2.0747%" height="15" fill="rgb(213,28,5)" fg:x="182" fg:w="5"/><text x="75.7687%" y="414.50">_..</text></g><g><title>numpy::borrow::shared::BorrowFlags::release::h0c355e1290609b3a (shared.rs:306) (1 samples, 0.41%)</title><rect x="77.5934%" y="260" width="0.4149%" height="15" fill="rgb(215,77,49)" fg:x="187" fg:w="1"/><text x="77.8434%" y="270.50"></text></g><g><title>numpy::borrow::shared::BorrowFlags::release::h0c355e1290609b3a (shared.rs:308) (1 samples, 0.41%)</title><rect x="78.0083%" y="260" width="0.4149%" height="15" fill="rgb(248,100,22)" fg:x="188" fg:w="1"/><text x="78.2583%" y="270.50"></text></g><g><title>numpy::borrow::shared::data_range::h143487adb8af9475 (shared.rs:380) (1 samples, 0.41%)</title><rect x="78.4232%" y="276" width="0.4149%" height="15" fill="rgb(208,67,9)" fg:x="189" fg:w="1"/><text x="78.6732%" y="286.50"></text></g><g><title>poly_match_rs::lib_v1::find_close_polygons::h2c922349e6052029 (lib_v1.rs:20) (42 samples, 17.43%)</title><rect x="61.8257%" y="196" width="17.4274%" height="15" fill="rgb(219,133,21)" fg:x="149" fg:w="42"/><text x="62.0757%" y="206.50">poly_match_rs::lib_v1::find..</text></g><g><title>core::ptr::drop_in_place$LT$pyo3..instance..Py$LT$pyo3..types..any..PyAny$GT$$GT$::h72bc311d849b54be (mod.rs:490) (33 samples, 13.69%)</title><rect x="65.5602%" y="212" width="13.6929%" height="15" fill="rgb(246,46,29)" fg:x="158" fg:w="33"/><text x="65.8102%" y="222.50">core::ptr::drop_in_pl..</text></g><g><title>_$LT$pyo3..instance..Py$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$::drop::h2b773e5868a66c28 (instance.rs:945) (33 samples, 13.69%)</title><rect x="65.5602%" y="228" width="13.6929%" height="15" fill="rgb(246,185,52)" fg:x="158" fg:w="33"/><text x="65.8102%" y="238.50">_$LT$pyo3..instance....</text></g><g><title>numpy::borrow::shared::release_shared::hfce4de11adb04ebc (shared.rs:85) (25 samples, 10.37%)</title><rect x="68.8797%" y="244" width="10.3734%" height="15" fill="rgb(252,136,11)" fg:x="166" fg:w="25"/><text x="69.1297%" y="254.50">numpy::borrow::..</text></g><g><title>numpy::borrow::shared::borrow_key::hdb7fa9b48f0b83d1 (shared.rs:381) (2 samples, 0.83%)</title><rect x="78.4232%" y="260" width="0.8299%" height="15" fill="rgb(219,138,53)" fg:x="189" fg:w="2"/><text x="78.6732%" y="270.50"></text></g><g><title>numpy::borrow::shared::data_range::h143487adb8af9475 (shared.rs:401) (1 samples, 0.41%)</title><rect x="78.8382%" y="276" width="0.4149%" height="15" fill="rgb(211,51,23)" fg:x="190" fg:w="1"/><text x="79.0882%" y="286.50"></text></g><g><title>0x7fc86ddf3a3e (libc-2.31.so) (1 samples, 0.41%)</title><rect x="79.2531%" y="372" width="0.4149%" height="15" fill="rgb(247,221,28)" fg:x="191" fg:w="1"/><text x="79.5031%" y="382.50"></text></g><g><title>0x7fc86ddf3b0f (libc-2.31.so) (1 samples, 0.41%)</title><rect x="79.6680%" y="372" width="0.4149%" height="15" fill="rgb(251,222,45)" fg:x="192" fg:w="1"/><text x="79.9180%" y="382.50"></text></g><g><title>__libc_free (libc-2.31.so) (1 samples, 0.41%)</title><rect x="80.0830%" y="372" width="0.4149%" height="15" fill="rgb(217,162,53)" fg:x="193" fg:w="1"/><text x="80.3330%" y="382.50"></text></g><g><title>core::ptr::drop_in_place$LT$ndarray..ArrayBase$LT$ndarray..data_repr..OwnedRepr$LT$f64$GT$$C$ndarray..dimension..dim..Dim$LT$$u5b$usize$u3b$$u20$1$u5d$$GT$$GT$$GT$::h4718addcaa9a8bd7 (mod.rs:490) (4 samples, 1.66%)</title><rect x="79.2531%" y="212" width="1.6598%" height="15" fill="rgb(229,93,14)" fg:x="191" fg:w="4"/><text x="79.5031%" y="222.50"></text></g><g><title>core::ptr::drop_in_place$LT$ndarray..data_repr..OwnedRepr$LT$f64$GT$$GT$::h6e09ce6e758a7941 (mod.rs:490) (4 samples, 1.66%)</title><rect x="79.2531%" y="228" width="1.6598%" height="15" fill="rgb(209,67,49)" fg:x="191" fg:w="4"/><text x="79.5031%" y="238.50"></text></g><g><title>_$LT$ndarray..data_repr..OwnedRepr$LT$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$::drop::hb8958f13e00edecf (data_repr.rs:172) (4 samples, 1.66%)</title><rect x="79.2531%" y="244" width="1.6598%" height="15" fill="rgb(213,87,29)" fg:x="191" fg:w="4"/><text x="79.5031%" y="254.50"></text></g><g><title>core::ptr::drop_in_place$LT$alloc..vec..Vec$LT$f64$GT$$GT$::h415ae523148b794a (mod.rs:490) (4 samples, 1.66%)</title><rect x="79.2531%" y="260" width="1.6598%" height="15" fill="rgb(205,151,52)" fg:x="191" fg:w="4"/><text x="79.5031%" y="270.50"></text></g><g><title>core::ptr::drop_in_place$LT$alloc..raw_vec..RawVec$LT$f64$GT$$GT$::h175e4b9c01784ea2 (mod.rs:490) (4 samples, 1.66%)</title><rect x="79.2531%" y="276" width="1.6598%" height="15" fill="rgb(253,215,39)" fg:x="191" fg:w="4"/><text x="79.5031%" y="286.50"></text></g><g><title>_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$::drop::h60a8f22bc3975232 (raw_vec.rs:486) (4 samples, 1.66%)</title><rect x="79.2531%" y="292" width="1.6598%" height="15" fill="rgb(221,220,41)" fg:x="191" fg:w="4"/><text x="79.5031%" y="302.50"></text></g><g><title>_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$::deallocate::h06d92c72339ff8e2 (alloc.rs:250) (4 samples, 1.66%)</title><rect x="79.2531%" y="308" width="1.6598%" height="15" fill="rgb(218,133,21)" fg:x="191" fg:w="4"/><text x="79.5031%" y="318.50"></text></g><g><title>alloc::alloc::dealloc::h98541c78ab71fa4e (alloc.rs:113) (4 samples, 1.66%)</title><rect x="79.2531%" y="324" width="1.6598%" height="15" fill="rgb(221,193,43)" fg:x="191" fg:w="4"/><text x="79.5031%" y="334.50"></text></g><g><title>__rdl_dealloc (alloc.rs:389) (4 samples, 1.66%)</title><rect x="79.2531%" y="340" width="1.6598%" height="15" fill="rgb(240,128,52)" fg:x="191" fg:w="4"/><text x="79.5031%" y="350.50"></text></g><g><title>std::sys::unix::alloc::_$LT$impl$u20$core..alloc..global..GlobalAlloc$u20$for$u20$std..alloc..System$GT$::dealloc::h265b5b31b8c42441 (alloc.rs) (4 samples, 1.66%)</title><rect x="79.2531%" y="356" width="1.6598%" height="15" fill="rgb(253,114,12)" fg:x="191" fg:w="4"/><text x="79.5031%" y="366.50"></text></g><g><title>free (libc-2.31.so) (1 samples, 0.41%)</title><rect x="80.4979%" y="372" width="0.4149%" height="15" fill="rgb(215,223,47)" fg:x="194" fg:w="1"/><text x="80.7479%" y="382.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::hebca5217480ed15f (iterator.rs:2476) (1 samples, 0.41%)</title><rect x="81.3278%" y="308" width="0.4149%" height="15" fill="rgb(248,225,23)" fg:x="196" fg:w="1"/><text x="81.5778%" y="318.50"></text></g><g><title>_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$::next::h762e66d34628f58c (macros.rs:136) (1 samples, 0.41%)</title><rect x="81.3278%" y="324" width="0.4149%" height="15" fill="rgb(250,108,0)" fg:x="196" fg:w="1"/><text x="81.5778%" y="334.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum::h01f4305947e2f649 (iterator.rs:3469) (6 samples, 2.49%)</title><rect x="80.9129%" y="244" width="2.4896%" height="15" fill="rgb(228,208,7)" fg:x="195" fg:w="6"/><text x="81.1629%" y="254.50">co..</text></g><g><title>_$LT$f64$u20$as$u20$core..iter..traits..accum..Sum$GT$::sum::h9c012e09fd8efa4f (accum.rs:106) (6 samples, 2.49%)</title><rect x="80.9129%" y="260" width="2.4896%" height="15" fill="rgb(244,45,10)" fg:x="195" fg:w="6"/><text x="81.1629%" y="270.50">_$..</text></g><g><title>_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$::fold::hb5b86959b4afe05f (map.rs:124) (6 samples, 2.49%)</title><rect x="80.9129%" y="276" width="2.4896%" height="15" fill="rgb(207,125,25)" fg:x="195" fg:w="6"/><text x="81.1629%" y="286.50">_$..</text></g><g><title>_$LT$ndarray..iterators..Iter$LT$A$C$D$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$::fold::h43f6d7bd4cff88a7 (mod.rs:398) (6 samples, 2.49%)</title><rect x="80.9129%" y="292" width="2.4896%" height="15" fill="rgb(210,195,18)" fg:x="195" fg:w="6"/><text x="81.1629%" y="302.50">_$..</text></g><g><title>core::iter::traits::iterator::Iterator::fold::hebca5217480ed15f (iterator.rs:2477) (4 samples, 1.66%)</title><rect x="81.7427%" y="308" width="1.6598%" height="15" fill="rgb(249,80,12)" fg:x="197" fg:w="4"/><text x="81.9927%" y="318.50"></text></g><g><title>core::iter::adapters::map::map_fold::_$u7b$$u7b$closure$u7d$$u7d$::hc2b03d47e4ffcaf8 (map.rs:84) (4 samples, 1.66%)</title><rect x="81.7427%" y="324" width="1.6598%" height="15" fill="rgb(221,65,9)" fg:x="197" fg:w="4"/><text x="81.9927%" y="334.50"></text></g><g><title>_$LT$f64$u20$as$u20$core..iter..traits..accum..Sum$GT$::sum::_$u7b$$u7b$closure$u7d$$u7d$::h23cbc26d85bd5b05 (accum.rs:109) (4 samples, 1.66%)</title><rect x="81.7427%" y="340" width="1.6598%" height="15" fill="rgb(235,49,36)" fg:x="197" fg:w="4"/><text x="81.9927%" y="350.50"></text></g><g><title>ndarray::impl_ops::arithmetic_ops::_$LT$impl$u20$core..ops..arith..Sub$LT$ndarray..ArrayBase$LT$S2$C$E$GT$$GT$$u20$for$u20$ndarray..ArrayBase$LT$S$C$D$GT$$GT$::sub::hacbd9f1ab417912d (impl_ops.rs:75) (2 samples, 0.83%)</title><rect x="83.4025%" y="276" width="0.8299%" height="15" fill="rgb(225,32,20)" fg:x="201" fg:w="2"/><text x="83.6525%" y="286.50"></text></g><g><title>ndarray::impl_methods::_$LT$impl$u20$ndarray..ArrayBase$LT$S$C$D$GT$$GT$::zip_mut_with_same_shape::h289ca56569491bb9 (impl_methods.rs:2393) (1 samples, 0.41%)</title><rect x="85.4772%" y="308" width="0.4149%" height="15" fill="rgb(215,141,46)" fg:x="206" fg:w="1"/><text x="85.7272%" y="318.50"></text></g><g><title>ndarray::dimension::dimension_trait::Dimension::strides_equivalent::h0fe1e3a54713a1a4 (dimension_trait.rs:246) (1 samples, 0.41%)</title><rect x="85.4772%" y="324" width="0.4149%" height="15" fill="rgb(250,160,47)" fg:x="206" fg:w="1"/><text x="85.7272%" y="334.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::h63f9caef3414ed9c (iterator.rs:2649) (1 samples, 0.41%)</title><rect x="85.4772%" y="340" width="0.4149%" height="15" fill="rgb(216,222,40)" fg:x="206" fg:w="1"/><text x="85.7272%" y="350.50"></text></g><g><title>_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$::try_fold::h4b2bdcae9d3ed35e (map.rs:117) (1 samples, 0.41%)</title><rect x="85.4772%" y="356" width="0.4149%" height="15" fill="rgb(234,217,39)" fg:x="206" fg:w="1"/><text x="85.7272%" y="366.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold::h15259682ac5ca094 (iterator.rs:2299) (1 samples, 0.41%)</title><rect x="85.4772%" y="372" width="0.4149%" height="15" fill="rgb(207,178,40)" fg:x="206" fg:w="1"/><text x="85.7272%" y="382.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::_$u7b$$u7b$closure$u7d$$u7d$::h8b14205526aba187 (map.rs:91) (1 samples, 0.41%)</title><rect x="85.4772%" y="388" width="0.4149%" height="15" fill="rgb(221,136,13)" fg:x="206" fg:w="1"/><text x="85.7272%" y="398.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_$u7b$$u7b$closure$u7d$$u7d$::heab968f2e4a4e5b6 (iterator.rs:2646) (1 samples, 0.41%)</title><rect x="85.4772%" y="404" width="0.4149%" height="15" fill="rgb(249,199,10)" fg:x="206" fg:w="1"/><text x="85.7272%" y="414.50"></text></g><g><title>ndarray::dimension::dimension_trait::Dimension::strides_equivalent::_$u7b$$u7b$closure$u7d$$u7d$::h386c6db674a5717e (impl_methods.rs:2384) (1 samples, 0.41%)</title><rect x="85.4772%" y="420" width="0.4149%" height="15" fill="rgb(249,222,13)" fg:x="206" fg:w="1"/><text x="85.7272%" y="430.50"></text></g><g><title>ndarray::impl_methods::_$LT$impl$u20$ndarray..ArrayBase$LT$S$C$D$GT$$GT$::zip_mut_with_same_shape::h289ca56569491bb9 (impl_methods.rs:2395) (1 samples, 0.41%)</title><rect x="85.8921%" y="308" width="0.4149%" height="15" fill="rgb(244,185,38)" fg:x="207" fg:w="1"/><text x="86.1421%" y="318.50"></text></g><g><title>ndarray::impl_methods::_$LT$impl$u20$ndarray..ArrayBase$LT$S$C$D$GT$$GT$::as_slice_memory_order::ha847b7bf42668094 (impl_methods.rs:1724) (1 samples, 0.41%)</title><rect x="85.8921%" y="324" width="0.4149%" height="15" fill="rgb(236,202,9)" fg:x="207" fg:w="1"/><text x="86.1421%" y="334.50"></text></g><g><title>ndarray::impl_ops::arithmetic_ops::_$LT$impl$u20$core..ops..arith..Sub$LT$$RF$ndarray..ArrayBase$LT$S2$C$E$GT$$GT$$u20$for$u20$ndarray..ArrayBase$LT$S$C$D$GT$$GT$::sub::h9b0cae7eaf6bdcc5 (impl_ops.rs) (6 samples, 2.49%)</title><rect x="84.2324%" y="292" width="2.4896%" height="15" fill="rgb(250,229,37)" fg:x="203" fg:w="6"/><text x="84.4824%" y="302.50">nd..</text></g><g><title>ndarray::impl_methods::_$LT$impl$u20$ndarray..ArrayBase$LT$S$C$D$GT$$GT$::zip_mut_with_same_shape::h289ca56569491bb9 (impl_methods.rs:2406) (1 samples, 0.41%)</title><rect x="86.3071%" y="308" width="0.4149%" height="15" fill="rgb(206,174,23)" fg:x="208" fg:w="1"/><text x="86.5571%" y="318.50"></text></g><g><title>ndarray_linalg::norm::Norm::norm::he599554446ddb9a7 (norm.rs:15) (17 samples, 7.05%)</title><rect x="80.9129%" y="212" width="7.0539%" height="15" fill="rgb(211,33,43)" fg:x="195" fg:w="17"/><text x="81.1629%" y="222.50">ndarray_l..</text></g><g><title>_$LT$ndarray..ArrayBase$LT$S$C$D$GT$$u20$as$u20$ndarray_linalg..norm..Norm$GT$::norm_l2::h0b3426f3d5c109fb (norm.rs:36) (17 samples, 7.05%)</title><rect x="80.9129%" y="228" width="7.0539%" height="15" fill="rgb(245,58,50)" fg:x="195" fg:w="17"/><text x="81.1629%" y="238.50">_$LT$ndar..</text></g><g><title>ndarray::impl_methods::_$LT$impl$u20$ndarray..ArrayBase$LT$S$C$D$GT$$GT$::iter::h267250437fc47587 (impl_methods.rs:408) (11 samples, 4.56%)</title><rect x="83.4025%" y="244" width="4.5643%" height="15" fill="rgb(244,68,36)" fg:x="201" fg:w="11"/><text x="83.6525%" y="254.50">ndarr..</text></g><g><title>ndarray::impl_methods::_$LT$impl$u20$ndarray..ArrayBase$LT$S$C$D$GT$$GT$::view::h2322efe1f10ab25a (impl_methods.rs:151) (11 samples, 4.56%)</title><rect x="83.4025%" y="260" width="4.5643%" height="15" fill="rgb(232,229,15)" fg:x="201" fg:w="11"/><text x="83.6525%" y="270.50">ndarr..</text></g><g><title>ndarray::impl_ops::arithmetic_ops::_$LT$impl$u20$core..ops..arith..Sub$LT$ndarray..ArrayBase$LT$S2$C$E$GT$$GT$$u20$for$u20$ndarray..ArrayBase$LT$S$C$D$GT$$GT$::sub::hacbd9f1ab417912d (impl_ops.rs:77) (9 samples, 3.73%)</title><rect x="84.2324%" y="276" width="3.7344%" height="15" fill="rgb(254,30,23)" fg:x="203" fg:w="9"/><text x="84.4824%" y="286.50">ndar..</text></g><g><title>ndarray::impl_ops::arithmetic_ops::_$LT$impl$u20$core..ops..arith..Sub$LT$$RF$ndarray..ArrayBase$LT$S2$C$E$GT$$GT$$u20$for$u20$ndarray..ArrayBase$LT$S$C$D$GT$$GT$::sub::h9b0cae7eaf6bdcc5 (impl_ops.rs:105) (3 samples, 1.24%)</title><rect x="86.7220%" y="292" width="1.2448%" height="15" fill="rgb(235,160,14)" fg:x="209" fg:w="3"/><text x="86.9720%" y="302.50"></text></g><g><title>core::result::Result$LT$T$C$E$GT$::unwrap::h5b95b0ca8b07151e (result.rs:1089) (3 samples, 1.24%)</title><rect x="86.7220%" y="308" width="1.2448%" height="15" fill="rgb(212,155,44)" fg:x="209" fg:w="3"/><text x="86.9720%" y="318.50"></text></g><g><title>poly_match_rs::lib_v1::find_close_polygons::h2c922349e6052029 (lib_v1.rs:22) (22 samples, 9.13%)</title><rect x="79.2531%" y="196" width="9.1286%" height="15" fill="deepskyblue" fg:x="191" fg:w="22"/><text x="79.5031%" y="206.50">poly_match_rs..</text></g><g><title>pyo3::gil::register_decref::hb12f6e64bb3f5814 (gil.rs:424) (1 samples, 0.41%)</title><rect x="87.9668%" y="212" width="0.4149%" height="15" fill="rgb(234,177,6)" fg:x="212" fg:w="1"/><text x="88.2168%" y="222.50"></text></g><g><title>poly_match_rs::lib_v1::_::__pyfunction_find_close_polygons::hdf1f03a4573d604e (lib_v1.rs:6) (213 samples, 88.38%)</title><rect x="0.4149%" y="180" width="88.3817%" height="15" fill="rgb(217,24,9)" fg:x="1" fg:w="213"/><text x="0.6649%" y="190.50">poly_match_rs::lib_v1::_::__pyfunction_find_close_polygons::hdf1f03a4573d604e (lib_v1.rs:6)</text></g><g><title>poly_match_rs::lib_v1::find_close_polygons::h2c922349e6052029 (lib_v1.rs:25) (1 samples, 0.41%)</title><rect x="88.3817%" y="196" width="0.4149%" height="15" fill="rgb(220,13,46)" fg:x="213" fg:w="1"/><text x="88.6317%" y="206.50"></text></g><g><title>core::ptr::drop_in_place$LT$pyo3..instance..Py$LT$pyo3..types..any..PyAny$GT$$GT$::h72bc311d849b54be (mod.rs:490) (1 samples, 0.41%)</title><rect x="88.3817%" y="212" width="0.4149%" height="15" fill="rgb(239,221,27)" fg:x="213" fg:w="1"/><text x="88.6317%" y="222.50"></text></g><g><title>_$LT$pyo3..instance..Py$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$::drop::h2b773e5868a66c28 (instance.rs:945) (1 samples, 0.41%)</title><rect x="88.3817%" y="228" width="0.4149%" height="15" fill="rgb(222,198,25)" fg:x="213" fg:w="1"/><text x="88.6317%" y="238.50"></text></g><g><title>pyo3::gil::register_decref::hb12f6e64bb3f5814 (gil.rs:419) (1 samples, 0.41%)</title><rect x="88.3817%" y="244" width="0.4149%" height="15" fill="rgb(211,99,13)" fg:x="213" fg:w="1"/><text x="88.6317%" y="254.50"></text></g><g><title>pyo3::gil::gil_is_acquired::h09b902bc8188895d (gil.rs:39) (1 samples, 0.41%)</title><rect x="88.3817%" y="260" width="0.4149%" height="15" fill="rgb(232,111,31)" fg:x="213" fg:w="1"/><text x="88.6317%" y="270.50"></text></g><g><title>std::thread::local::LocalKey$LT$T$GT$::try_with::h872a0f3266373274 (local.rs:445) (1 samples, 0.41%)</title><rect x="88.3817%" y="276" width="0.4149%" height="15" fill="rgb(245,82,37)" fg:x="213" fg:w="1"/><text x="88.6317%" y="286.50"></text></g><g><title>pyo3::gil::GIL_COUNT::__getit::he03149d6372f31bb (local.rs:346) (1 samples, 0.41%)</title><rect x="88.3817%" y="292" width="0.4149%" height="15" fill="rgb(227,149,46)" fg:x="213" fg:w="1"/><text x="88.6317%" y="302.50"></text></g><g><title>std::thread::local::fast::Key$LT$T$GT$::get::hd91dd9385144e0ef (local.rs:968) (1 samples, 0.41%)</title><rect x="88.3817%" y="308" width="0.4149%" height="15" fill="rgb(218,36,50)" fg:x="213" fg:w="1"/><text x="88.6317%" y="318.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner$LT$T$GT$::get::h644477a45aa7161a (local.rs:802) (1 samples, 0.41%)</title><rect x="88.3817%" y="324" width="0.4149%" height="15" fill="rgb(226,80,48)" fg:x="213" fg:w="1"/><text x="88.6317%" y="334.50"></text></g><g><title>core::option::Option$LT$T$GT$::as_ref::h1a0c32c8659e37db (option.rs:676) (1 samples, 0.41%)</title><rect x="88.3817%" y="340" width="0.4149%" height="15" fill="rgb(238,224,15)" fg:x="213" fg:w="1"/><text x="88.6317%" y="350.50"></text></g><g><title>0x7fc85e71c040 (poly_match_rs/poly_match_rs.cpython-310-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="88.3817%" y="356" width="0.4149%" height="15" fill="rgb(241,136,10)" fg:x="213" fg:w="1"/><text x="88.6317%" y="366.50"></text></g><g><title>_$LT$$RF$pyo3..types..iterator..PyIterator$u20$as$u20$core..iter..traits..iterator..Iterator$GT$::next::h79e4b10aa684cf68 (iterator.rs:57) (5 samples, 2.07%)</title><rect x="89.2116%" y="292" width="2.0747%" height="15" fill="rgb(208,32,45)" fg:x="215" fg:w="5"/><text x="89.4616%" y="302.50">_..</text></g><g><title>pyo3::marker::Python::from_owned_ptr_or_opt::hf8f66ea7afb8f58d (marker.rs:743) (5 samples, 2.07%)</title><rect x="89.2116%" y="308" width="2.0747%" height="15" fill="rgb(207,135,9)" fg:x="215" fg:w="5"/><text x="89.4616%" y="318.50">p..</text></g><g><title>_$LT$T$u20$as$u20$pyo3..conversion..FromPyPointer$GT$::from_owned_ptr_or_opt::h98ae641ea410e348 (conversion.rs:616) (5 samples, 2.07%)</title><rect x="89.2116%" y="324" width="2.0747%" height="15" fill="rgb(206,86,44)" fg:x="215" fg:w="5"/><text x="89.4616%" y="334.50">_..</text></g><g><title>core::ptr::non_null::NonNull$LT$T$GT$::new::h5a1e274ff84a96cd (non_null.rs:223) (5 samples, 2.07%)</title><rect x="89.2116%" y="340" width="2.0747%" height="15" fill="rgb(245,177,15)" fg:x="215" fg:w="5"/><text x="89.4616%" y="350.50">c..</text></g><g><title>core::ptr::mut_ptr::_$LT$impl$u20$$BP$mut$u20$T$GT$::is_null::h3c2ec8eaa992eb04 (mut_ptr.rs:50) (5 samples, 2.07%)</title><rect x="89.2116%" y="356" width="2.0747%" height="15" fill="rgb(206,64,50)" fg:x="215" fg:w="5"/><text x="89.4616%" y="366.50">c..</text></g><g><title>core::ptr::mut_ptr::_$LT$impl$u20$$BP$mut$u20$T$GT$::is_null::runtime_impl::hf4e194c065b800f2 (mut_ptr.rs:36) (5 samples, 2.07%)</title><rect x="89.2116%" y="372" width="2.0747%" height="15" fill="rgb(234,36,40)" fg:x="215" fg:w="5"/><text x="89.4616%" y="382.50">c..</text></g><g><title>pyo3::types::sequence::extract_sequence::h667109ffe28592ee (sequence.rs:315) (7 samples, 2.90%)</title><rect x="88.7967%" y="276" width="2.9046%" height="15" fill="rgb(213,64,8)" fg:x="214" fg:w="7"/><text x="89.0467%" y="286.50">py..</text></g><g><title>_$LT$$RF$pyo3..types..iterator..PyIterator$u20$as$u20$core..iter..traits..iterator..Iterator$GT$::next::h79e4b10aa684cf68 (iterator.rs:61) (1 samples, 0.41%)</title><rect x="91.2863%" y="292" width="0.4149%" height="15" fill="rgb(210,75,36)" fg:x="220" fg:w="1"/><text x="91.5363%" y="302.50"></text></g><g><title>pyo3::impl_::trampoline::trampoline_inner::h77429e1c9e644ffd (trampoline.rs:204) (221 samples, 91.70%)</title><rect x="0.4149%" y="116" width="91.7012%" height="15" fill="rgb(229,88,21)" fg:x="1" fg:w="221"/><text x="0.6649%" y="126.50">pyo3::impl_::trampoline::trampoline_inner::h77429e1c9e644ffd (trampoline.rs:204)</text></g><g><title>std::panic::catch_unwind::h8423ea49f499494c (panic.rs:140) (221 samples, 91.70%)</title><rect x="0.4149%" y="132" width="91.7012%" height="15" fill="rgb(252,204,47)" fg:x="1" fg:w="221"/><text x="0.6649%" y="142.50">std::panic::catch_unwind::h8423ea49f499494c (panic.rs:140)</text></g><g><title>std::panicking::try::hba7c0955bc8bd852 (panicking.rs:451) (221 samples, 91.70%)</title><rect x="0.4149%" y="148" width="91.7012%" height="15" fill="rgb(208,77,27)" fg:x="1" fg:w="221"/><text x="0.6649%" y="158.50">std::panicking::try::hba7c0955bc8bd852 (panicking.rs:451)</text></g><g><title>std::panicking::try::do_call::hb4470b43bd0992aa (panicking.rs:487) (221 samples, 91.70%)</title><rect x="0.4149%" y="164" width="91.7012%" height="15" fill="rgb(221,76,26)" fg:x="1" fg:w="221"/><text x="0.6649%" y="174.50">std::panicking::try::do_call::hb4470b43bd0992aa (panicking.rs:487)</text></g><g><title>poly_match_rs::lib_v1::_::__pyfunction_find_close_polygons::hdf1f03a4573d604e (lib_v1.rs:9) (8 samples, 3.32%)</title><rect x="88.7967%" y="180" width="3.3195%" height="15" fill="rgb(225,139,18)" fg:x="214" fg:w="8"/><text x="89.0467%" y="190.50">pol..</text></g><g><title>_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$::branch::h8a0e7364c9d25a1e (result.rs:2049) (8 samples, 3.32%)</title><rect x="88.7967%" y="196" width="3.3195%" height="15" fill="rgb(230,137,11)" fg:x="214" fg:w="8"/><text x="89.0467%" y="206.50">_$L..</text></g><g><title>pyo3::impl_::extract_argument::extract_argument::hecb3d72f49403eeb (extract_argument.rs:88) (8 samples, 3.32%)</title><rect x="88.7967%" y="212" width="3.3195%" height="15" fill="rgb(212,28,1)" fg:x="214" fg:w="8"/><text x="89.0467%" y="222.50">pyo..</text></g><g><title>_$LT$T$u20$as$u20$pyo3..impl_..extract_argument..PyFunctionArgument$GT$::extract::hb307e28470c7d16c (extract_argument.rs:30) (8 samples, 3.32%)</title><rect x="88.7967%" y="228" width="3.3195%" height="15" fill="rgb(248,164,17)" fg:x="214" fg:w="8"/><text x="89.0467%" y="238.50">_$L..</text></g><g><title>pyo3::types::any::PyAny::extract::h8bca5a8da0161eff (any.rs:845) (8 samples, 3.32%)</title><rect x="88.7967%" y="244" width="3.3195%" height="15" fill="rgb(222,171,42)" fg:x="214" fg:w="8"/><text x="89.0467%" y="254.50">pyo..</text></g><g><title>pyo3::types::sequence::_$LT$impl$u20$pyo3..conversion..FromPyObject$u20$for$u20$alloc..vec..Vec$LT$T$GT$$GT$::extract::h1efa2d5f68688167 (sequence.rs:291) (8 samples, 3.32%)</title><rect x="88.7967%" y="260" width="3.3195%" height="15" fill="rgb(243,84,45)" fg:x="214" fg:w="8"/><text x="89.0467%" y="270.50">pyo..</text></g><g><title>pyo3::types::sequence::extract_sequence::h667109ffe28592ee (sequence.rs:316) (1 samples, 0.41%)</title><rect x="91.7012%" y="276" width="0.4149%" height="15" fill="rgb(252,49,23)" fg:x="221" fg:w="1"/><text x="91.9512%" y="286.50"></text></g><g><title>alloc::vec::Vec$LT$T$C$A$GT$::push::hf0e5e5853abb31fc (mod.rs:1839) (1 samples, 0.41%)</title><rect x="91.7012%" y="292" width="0.4149%" height="15" fill="rgb(215,19,7)" fg:x="221" fg:w="1"/><text x="91.9512%" y="302.50"></text></g><g><title>pyo3_ffi::object::Py_DECREF::h07dce3f7af065cec (object.rs) (5 samples, 2.07%)</title><rect x="92.1162%" y="148" width="2.0747%" height="15" fill="rgb(238,81,41)" fg:x="222" fg:w="5"/><text x="92.3662%" y="158.50">p..</text></g><g><title>unicode_dealloc (python3.10) (5 samples, 2.07%)</title><rect x="92.1162%" y="164" width="2.0747%" height="15" fill="rgb(210,199,37)" fg:x="222" fg:w="5"/><text x="92.3662%" y="174.50">u..</text></g><g><title>main (poly_match_v2_riir.py:79) (231 samples, 95.85%)</title><rect x="0.0000%" y="84" width="95.8506%" height="15" fill="rgb(244,192,49)" fg:x="0" fg:w="231"/><text x="0.2500%" y="94.50">main (poly_match_v2_riir.py:79)</text></g><g><title>poly_match_rs::lib_v1::_::_$LT$impl$u20$poly_match_rs..lib_v1..find_close_polygons..MakeDef$GT$::DEF::trampoline::h94ea6126fd726e74 (lib_v1.rs:6) (230 samples, 95.44%)</title><rect x="0.4149%" y="100" width="95.4357%" height="15" fill="rgb(226,211,11)" fg:x="1" fg:w="230"/><text x="0.6649%" y="110.50">poly_match_rs::lib_v1::_::_$LT$impl$u20$poly_match_rs..lib_v1..find_close_polygons..MakeDef$GT$::DEF::trampoline::h94ea6126fd726e74 (lib_v1.rs:6)</text></g><g><title>pyo3::impl_::trampoline::trampoline_inner::h77429e1c9e644ffd (trampoline.rs:208) (9 samples, 3.73%)</title><rect x="92.1162%" y="116" width="3.7344%" height="15" fill="rgb(236,162,54)" fg:x="222" fg:w="9"/><text x="92.3662%" y="126.50">pyo3..</text></g><g><title>_$LT$pyo3..gil..GILPool$u20$as$u20$core..ops..drop..Drop$GT$::drop::h14a8033a6a291ad1 (gil.rs:386) (9 samples, 3.73%)</title><rect x="92.1162%" y="132" width="3.7344%" height="15" fill="rgb(220,229,9)" fg:x="222" fg:w="9"/><text x="92.3662%" y="142.50">_$LT..</text></g><g><title>pyo3_ffi::object::Py_DECREF::h07dce3f7af065cec (object.rs:426) (4 samples, 1.66%)</title><rect x="94.1909%" y="148" width="1.6598%" height="15" fill="rgb(250,87,22)" fg:x="227" fg:w="4"/><text x="94.4409%" y="158.50"></text></g><g><title>area (poly_match_v2_riir.py:24) (4 samples, 1.66%)</title><rect x="96.2656%" y="116" width="1.6598%" height="15" fill="rgb(239,43,17)" fg:x="232" fg:w="4"/><text x="96.5156%" y="126.50"></text></g><g><title>&lt;module&gt; (measure.py:16) (237 samples, 98.34%)</title><rect x="0.0000%" y="68" width="98.3402%" height="15" fill="rgb(231,177,25)" fg:x="0" fg:w="237"/><text x="0.2500%" y="78.50">&lt;module&gt; (measure.py:16)</text></g><g><title>main (poly_match_v2_riir.py:86) (6 samples, 2.49%)</title><rect x="95.8506%" y="84" width="2.4896%" height="15" fill="rgb(219,179,1)" fg:x="231" fg:w="6"/><text x="96.1006%" y="94.50">ma..</text></g><g><title>select_best_polygon (poly_match_v2_riir.py:67) (6 samples, 2.49%)</title><rect x="95.8506%" y="100" width="2.4896%" height="15" fill="rgb(238,219,53)" fg:x="231" fg:w="6"/><text x="96.1006%" y="110.50">se..</text></g><g><title>area (poly_match_v2_riir.py:28) (1 samples, 0.41%)</title><rect x="97.9253%" y="116" width="0.4149%" height="15" fill="rgb(232,167,36)" fg:x="236" fg:w="1"/><text x="98.1753%" y="126.50"></text></g><g><title>0x7fc86bd162fd (?) (1 samples, 0.41%)</title><rect x="98.3402%" y="612" width="0.4149%" height="15" fill="rgb(244,19,51)" fg:x="237" fg:w="1"/><text x="98.5902%" y="622.50"></text></g><g><title>_lock_unlock_module (&lt;frozen importlib._bootstrap&gt;:230) (1 samples, 0.41%)</title><rect x="98.3402%" y="628" width="0.4149%" height="15" fill="rgb(224,6,22)" fg:x="237" fg:w="1"/><text x="98.5902%" y="638.50"></text></g><g><title>release (&lt;frozen importlib._bootstrap&gt;:132) (1 samples, 0.41%)</title><rect x="98.3402%" y="644" width="0.4149%" height="15" fill="rgb(224,145,5)" fg:x="237" fg:w="1"/><text x="98.5902%" y="654.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:152) (2 samples, 0.83%)</title><rect x="98.3402%" y="260" width="0.8299%" height="15" fill="rgb(234,130,49)" fg:x="237" fg:w="2"/><text x="98.5902%" y="270.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1078) (2 samples, 0.83%)</title><rect x="98.3402%" y="276" width="0.8299%" height="15" fill="rgb(254,6,2)" fg:x="237" fg:w="2"/><text x="98.5902%" y="286.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (2 samples, 0.83%)</title><rect x="98.3402%" y="292" width="0.8299%" height="15" fill="rgb(208,96,46)" fg:x="237" fg:w="2"/><text x="98.5902%" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (2 samples, 0.83%)</title><rect x="98.3402%" y="308" width="0.8299%" height="15" fill="rgb(239,3,39)" fg:x="237" fg:w="2"/><text x="98.5902%" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (2 samples, 0.83%)</title><rect x="98.3402%" y="324" width="0.8299%" height="15" fill="rgb(233,210,1)" fg:x="237" fg:w="2"/><text x="98.5902%" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (2 samples, 0.83%)</title><rect x="98.3402%" y="340" width="0.8299%" height="15" fill="rgb(244,137,37)" fg:x="237" fg:w="2"/><text x="98.5902%" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (2 samples, 0.83%)</title><rect x="98.3402%" y="356" width="0.8299%" height="15" fill="rgb(240,136,2)" fg:x="237" fg:w="2"/><text x="98.5902%" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (2 samples, 0.83%)</title><rect x="98.3402%" y="372" width="0.8299%" height="15" fill="rgb(239,18,37)" fg:x="237" fg:w="2"/><text x="98.5902%" y="382.50"></text></g><g><title>&lt;module&gt; (numpy/random/__init__.py:180) (2 samples, 0.83%)</title><rect x="98.3402%" y="388" width="0.8299%" height="15" fill="rgb(218,185,22)" fg:x="237" fg:w="2"/><text x="98.5902%" y="398.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1078) (2 samples, 0.83%)</title><rect x="98.3402%" y="404" width="0.8299%" height="15" fill="rgb(225,218,4)" fg:x="237" fg:w="2"/><text x="98.5902%" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (2 samples, 0.83%)</title><rect x="98.3402%" y="420" width="0.8299%" height="15" fill="rgb(230,182,32)" fg:x="237" fg:w="2"/><text x="98.5902%" y="430.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (2 samples, 0.83%)</title><rect x="98.3402%" y="436" width="0.8299%" height="15" fill="rgb(242,56,43)" fg:x="237" fg:w="2"/><text x="98.5902%" y="446.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (2 samples, 0.83%)</title><rect x="98.3402%" y="452" width="0.8299%" height="15" fill="rgb(233,99,24)" fg:x="237" fg:w="2"/><text x="98.5902%" y="462.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (2 samples, 0.83%)</title><rect x="98.3402%" y="468" width="0.8299%" height="15" fill="rgb(234,209,42)" fg:x="237" fg:w="2"/><text x="98.5902%" y="478.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (2 samples, 0.83%)</title><rect x="98.3402%" y="484" width="0.8299%" height="15" fill="rgb(227,7,12)" fg:x="237" fg:w="2"/><text x="98.5902%" y="494.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (2 samples, 0.83%)</title><rect x="98.3402%" y="500" width="0.8299%" height="15" fill="rgb(245,203,43)" fg:x="237" fg:w="2"/><text x="98.5902%" y="510.50"></text></g><g><title>&lt;module&gt; (numpy/random/_pickle.py:4) (2 samples, 0.83%)</title><rect x="98.3402%" y="516" width="0.8299%" height="15" fill="rgb(238,205,33)" fg:x="237" fg:w="2"/><text x="98.5902%" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (2 samples, 0.83%)</title><rect x="98.3402%" y="532" width="0.8299%" height="15" fill="rgb(231,56,7)" fg:x="237" fg:w="2"/><text x="98.5902%" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (2 samples, 0.83%)</title><rect x="98.3402%" y="548" width="0.8299%" height="15" fill="rgb(244,186,29)" fg:x="237" fg:w="2"/><text x="98.5902%" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (2 samples, 0.83%)</title><rect x="98.3402%" y="564" width="0.8299%" height="15" fill="rgb(234,111,31)" fg:x="237" fg:w="2"/><text x="98.5902%" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1184) (2 samples, 0.83%)</title><rect x="98.3402%" y="580" width="0.8299%" height="15" fill="rgb(241,149,10)" fg:x="237" fg:w="2"/><text x="98.5902%" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (2 samples, 0.83%)</title><rect x="98.3402%" y="596" width="0.8299%" height="15" fill="rgb(249,206,44)" fg:x="237" fg:w="2"/><text x="98.5902%" y="606.50"></text></g><g><title>__pyx_pymod_exec__sfc64 (numpy/random/_sfc64.cpython-310-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="98.7552%" y="612" width="0.4149%" height="15" fill="rgb(251,153,30)" fg:x="238" fg:w="1"/><text x="99.0052%" y="622.50"></text></g><g><title>&lt;module&gt; (measure.py:2) (3 samples, 1.24%)</title><rect x="98.3402%" y="68" width="1.2448%" height="15" fill="rgb(239,152,38)" fg:x="237" fg:w="3"/><text x="98.5902%" y="78.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (3 samples, 1.24%)</title><rect x="98.3402%" y="84" width="1.2448%" height="15" fill="rgb(249,139,47)" fg:x="237" fg:w="3"/><text x="98.5902%" y="94.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (3 samples, 1.24%)</title><rect x="98.3402%" y="100" width="1.2448%" height="15" fill="rgb(244,64,35)" fg:x="237" fg:w="3"/><text x="98.5902%" y="110.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (3 samples, 1.24%)</title><rect x="98.3402%" y="116" width="1.2448%" height="15" fill="rgb(216,46,15)" fg:x="237" fg:w="3"/><text x="98.5902%" y="126.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (3 samples, 1.24%)</title><rect x="98.3402%" y="132" width="1.2448%" height="15" fill="rgb(250,74,19)" fg:x="237" fg:w="3"/><text x="98.5902%" y="142.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (3 samples, 1.24%)</title><rect x="98.3402%" y="148" width="1.2448%" height="15" fill="rgb(249,42,33)" fg:x="237" fg:w="3"/><text x="98.5902%" y="158.50"></text></g><g><title>&lt;module&gt; (poly_match_v2_riir.py:3) (3 samples, 1.24%)</title><rect x="98.3402%" y="164" width="1.2448%" height="15" fill="rgb(242,149,17)" fg:x="237" fg:w="3"/><text x="98.5902%" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (3 samples, 1.24%)</title><rect x="98.3402%" y="180" width="1.2448%" height="15" fill="rgb(244,29,21)" fg:x="237" fg:w="3"/><text x="98.5902%" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (3 samples, 1.24%)</title><rect x="98.3402%" y="196" width="1.2448%" height="15" fill="rgb(220,130,37)" fg:x="237" fg:w="3"/><text x="98.5902%" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (3 samples, 1.24%)</title><rect x="98.3402%" y="212" width="1.2448%" height="15" fill="rgb(211,67,2)" fg:x="237" fg:w="3"/><text x="98.5902%" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (3 samples, 1.24%)</title><rect x="98.3402%" y="228" width="1.2448%" height="15" fill="rgb(235,68,52)" fg:x="237" fg:w="3"/><text x="98.5902%" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (3 samples, 1.24%)</title><rect x="98.3402%" y="244" width="1.2448%" height="15" fill="rgb(246,142,3)" fg:x="237" fg:w="3"/><text x="98.5902%" y="254.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:153) (1 samples, 0.41%)</title><rect x="99.1701%" y="260" width="0.4149%" height="15" fill="rgb(241,25,7)" fg:x="239" fg:w="1"/><text x="99.4201%" y="270.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1078) (1 samples, 0.41%)</title><rect x="99.1701%" y="276" width="0.4149%" height="15" fill="rgb(242,119,39)" fg:x="239" fg:w="1"/><text x="99.4201%" y="286.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (1 samples, 0.41%)</title><rect x="99.1701%" y="292" width="0.4149%" height="15" fill="rgb(241,98,45)" fg:x="239" fg:w="1"/><text x="99.4201%" y="302.50"></text></g><g><title>_lock_unlock_module (&lt;frozen importlib._bootstrap&gt;:230) (1 samples, 0.41%)</title><rect x="99.1701%" y="308" width="0.4149%" height="15" fill="rgb(254,28,30)" fg:x="239" fg:w="1"/><text x="99.4201%" y="318.50"></text></g><g><title>release (&lt;frozen importlib._bootstrap&gt;:130) (1 samples, 0.41%)</title><rect x="99.1701%" y="324" width="0.4149%" height="15" fill="rgb(241,142,54)" fg:x="239" fg:w="1"/><text x="99.4201%" y="334.50"></text></g><g><title>all (241 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(222,85,15)" fg:x="0" fg:w="241"/><text x="0.2500%" y="62.50"></text></g><g><title>&lt;module&gt; (measure.py:9) (1 samples, 0.41%)</title><rect x="99.5851%" y="68" width="0.4149%" height="15" fill="rgb(210,85,47)" fg:x="240" fg:w="1"/><text x="99.8351%" y="78.50"></text></g><g><title>generate_example (poly_match_v2_riir.py:48) (1 samples, 0.41%)</title><rect x="99.5851%" y="84" width="0.4149%" height="15" fill="rgb(224,206,25)" fg:x="240" fg:w="1"/><text x="99.8351%" y="94.50"></text></g><g><title>&lt;listcomp&gt; (poly_match_v2_riir.py:50) (1 samples, 0.41%)</title><rect x="99.5851%" y="100" width="0.4149%" height="15" fill="rgb(243,201,19)" fg:x="240" fg:w="1"/><text x="99.8351%" y="110.50"></text></g><g><title>randint (numpy/random/mtrand.cpython-310-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="99.5851%" y="116" width="0.4149%" height="15" fill="rgb(236,59,4)" fg:x="240" fg:w="1"/><text x="99.8351%" y="126.50"></text></g><g><title>_bounded_integers__rand_int64 (numpy/random/_bounded_integers.cpython-310-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="99.5851%" y="132" width="0.4149%" height="15" fill="rgb(254,179,45)" fg:x="240" fg:w="1"/><text x="99.8351%" y="142.50"></text></g><g><title>__Pyx_PyObject_LookupSpecial (numpy/random/_bounded_integers.cpython-310-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="99.5851%" y="148" width="0.4149%" height="15" fill="rgb(226,14,10)" fg:x="240" fg:w="1"/><text x="99.8351%" y="158.50"></text></g></svg></svg>